<?xml version='1.0' encoding='utf-8' ?>

<workbook version='8.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8000.13.0605.1330                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='8.1'>
      <aliases enabled='yes' />
      <column caption='Count' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0000000000000000'>
        <calculation class='tableau' formula='4.0' />
        <range granularity='1.0000000000000000' max='20.000000000000000' min='0.00000000000000000' />
      </column>
      <column caption='Pct' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.050000000000000003'>
        <calculation class='tableau' formula='0.050000000000000003' />
        <range granularity='0.0050000000000000001' max='0.12' min='0.00000000000000000' />
      </column>
    </datasource>
    <datasource caption='BidHist#csv (BidHist.csv)' inline='true' name='csv.41512.799156550929' version='8.1'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\Phill\MSA Drive\Google Drive\MSA\Classes\Logistic Regression\Project\' driver='' filename='BidHist.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='BidHist#csv' table='[BidHist#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Avg' caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_0710826202606272]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Winning Bid Price]/[Estimated Cost (Millions)]-1' scope-isolation='false' />
      </column>
      <column caption='WinPrice over est cost ratio' datatype='real' default-format='p0.00%' name='[Calculation_2550826195247717]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='median([Winning Bid Price])/median([Estimated Cost (Millions)])-1' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor A]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor B]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor C]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor D]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor E]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor F]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor G]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor H]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor I]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Competitor J]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Median' datatype='integer' name='[Cost After Engineering Estimate (Thousands)]' role='measure' type='quantitative'>
      </column>
      <column aggregation='CountD' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Median' datatype='real' name='[Estimated Years to Complete]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Median' datatype='integer' name='[Number of Competitor Bids]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Transportation' />
          <alias key='2' value='Lodging' />
          <alias key='3' value='Multi-family Residential' />
          <alias key='4' value='Amusement and Recreation' />
          <alias key='5' value='Highway and Street' />
          <alias key='6' value='Education' />
          <alias key='7' value='Healthcare' />
          <alias key='8' value='Manufacturing' />
          <alias key='9' value='Power' />
          <alias key='10' value='Military' />
        </aliases>
      </column>
      <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
      </column>
      <column aggregation='Median' datatype='real' name='[Winning Bid Price]' role='measure' type='quantitative'>
      </column>
      <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
      <group caption='Competition ALL' name='[Competitor A, Competitor B, Competitor C and 7 more (Combined)]' name-style='unqualified' user:ui-builder='nest-group'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Competitor A]' />
          <groupfilter function='level-members' level='[Competitor B]' />
          <groupfilter function='level-members' level='[Competitor C]' />
          <groupfilter function='level-members' level='[Competitor D]' />
          <groupfilter function='level-members' level='[Competitor E]' />
          <groupfilter function='level-members' level='[Competitor F]' />
          <groupfilter function='level-members' level='[Competitor G]' />
          <groupfilter function='level-members' level='[Competitor H]' />
          <groupfilter function='level-members' level='[Competitor I]' />
          <groupfilter function='level-members' level='[Competitor J]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Phill\MSA Drive\Google Drive\MSA\Classes\Logistic Regression\Project\BidHist#csv (BidHist.csv).tde' schema='Extract' tablename='Extract' update-time='8/26/2013 11:11:10 PM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='543' timestamp-start='2013-08-26 23:11:10.465000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Win Bid:nk]' type='palette'>
            <map to='#2ca02c'>
              <bucket>&quot;Yes&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;No&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region of Country:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Mid-west&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Sector:ok]' type='palette'>
            <map to='#17becf'>
              <bucket>10</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>1</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>3</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>8</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>6</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>5</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>9</bucket>
            </map>
            <map to='#d62728'>
              <bucket>4</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>7</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>2</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='FirmA#csv (FirmA.csv)' inline='true' name='csv.41512.898384386572' version='8.1'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\Phill\MSA Drive\Google Drive\MSA\Classes\Logistic Regression\Project\' driver='' filename='FirmA.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='FirmA#csv' table='[FirmA#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
      </column>
      <column caption='AccuNum' datatype='integer' name='[Calculation_6400826225807171]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Accuracy] =&quot;Excellent&quot; then 5 &#13;&#10;elseif [Accuracy] =&quot;Above Average&quot; then 4&#13;&#10;elseif [Accuracy] =&quot;Average&quot; then 3&#13;&#10;elseif [Accuracy] =&quot;Below Average&quot; then 2&#13;&#10;elseif [Accuracy] =&quot;Poor&quot; then 1 end' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Company ID]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Median' datatype='integer' name='[Days Until Estimate Needed]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Median' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
        <aliases>
          <alias key='1' value='Transportation' />
          <alias key='2' value='Lodging' />
          <alias key='3' value='Multi-family Residential' />
          <alias key='4' value='Amusement and Recreation' />
          <alias key='5' value='Highway and Street' />
          <alias key='6' value='Education' />
          <alias key='7' value='Healthcare' />
          <alias key='8' value='Manufacturing' />
          <alias key='9' value='Power' />
          <alias key='10' value='Military' />
        </aliases>
      </column>
      <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
      <group hidden='true' name='[Exclusions (Accuracy,Sector)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Accuracy:nk]' />
          <groupfilter function='level-members' level='[none:Sector:ok]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Phill\MSA Drive\Google Drive\MSA\Classes\Logistic Regression\Project\FirmA#csv (FirmA.csv).tde' schema='Extract' tablename='Extract' update-time='8/27/2013 1:33:46 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1087' timestamp-start='2013-08-27 01:33:46.911000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Accuracy:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Excellent&quot;</bucket>
            <bucket>&quot;Above Average&quot;</bucket>
            <bucket>&quot;Average&quot;</bucket>
            <bucket>&quot;Below Average&quot;</bucket>
            <bucket>&quot;Poor&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
    <datasource caption='FirmB#csv (FirmB.csv)' inline='true' name='csv.41512.898800844909' version='8.1'>
      <connection auto-extract='yes' character-set='65001' class='csv' directory='C:\Users\Phill\MSA Drive\Google Drive\MSA\Classes\Logistic Regression\Project\' driver='' filename='FirmB.csv' force-character-set='no' force-header='no' force-separator='no' header='yes' separator=','>
        <relation name='FirmB#csv' table='[FirmB#csv]' type='table' />
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
      </column>
      <column caption='Accuracy Num' datatype='integer' name='[Calculation_2230826224936933]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='if [Accuracy] =&quot;Excellent&quot; then 5 &#13;&#10;elseif [Accuracy] =&quot;Above Average&quot; then 4&#13;&#10;elseif [Accuracy] =&quot;Average&quot; then 3&#13;&#10;elseif [Accuracy] =&quot;Below Average&quot; then 2&#13;&#10;elseif [Accuracy] =&quot;Poor&quot; then 1 end' scope-isolation='false' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Company ID]' role='dimension' type='ordinal'>
      </column>
      <column aggregation='Median' datatype='integer' name='[Days Until Estimate Needed]' role='measure' type='quantitative'>
      </column>
      <column aggregation='Median' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
      </column>
      <column datatype='string' datatype-customized='true' name='[Sector]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;1&quot;' value='Transportation' />
          <alias key='&quot;10&quot;' value='Military' />
          <alias key='&quot;2&quot;' value='Lodging' />
          <alias key='&quot;3&quot;' value='Multi-family Residential' />
          <alias key='&quot;4&quot;' value=' Amusement and Recreation' />
          <alias key='&quot;5&quot;' value='Highway and Street' />
          <alias key='&quot;6&quot;' value='Education' />
          <alias key='&quot;7&quot;' value='Healthcare' />
          <alias key='&quot;8&quot;' value='Manufacturing' />
          <alias key='&quot;9&quot;' value='Power' />
        </aliases>
      </column>
      <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Action (Accuracy)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Accuracy]' />
        </groupfilter>
      </group>
      <group hidden='true' name='[Exclusions (Accuracy,Sector)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:Accuracy:nk]' />
          <groupfilter function='level-members' level='[none:Sector:nk]' />
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection class='dataengine' dbname='C:\Users\Phill\MSA Drive\Google Drive\MSA\Classes\Logistic Regression\Project\FirmB#csv (FirmB.csv).tde' schema='Extract' tablename='Extract' update-time='8/27/2013 1:34:22 AM'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <calculations>
            <calculation column='[Number of Records]' formula='1' />
          </calculations>
          <refresh>
            <refresh-event add-from-file-path='' increment-value='%null%' refresh-type='create' rows-inserted='1212' timestamp-start='2013-08-27 01:34:22.021000' />
          </refresh>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Sector:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;10&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;1&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;3&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;8&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;6&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;5&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;9&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;4&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;7&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;2&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region of Country:nk]' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Mid-west&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Southeast&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Southwest&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Northeast&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <sort class='manual' column='[none:Accuracy:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Excellent&quot;</bucket>
            <bucket>&quot;Above Average&quot;</bucket>
            <bucket>&quot;Average&quot;</bucket>
            <bucket>&quot;Below Average&quot;</bucket>
            <bucket>&quot;Poor&quot;</bucket>
          </dictionary>
        </sort>
      </default-sorts>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Online' />
  </mapsources>
  <shared-views>
    <shared-view name='csv.41512.898800844909'>
      <datasources>
        <datasource caption='FirmB#csv (FirmB.csv)' name='csv.41512.898800844909' />
      </datasources>
      <datasource-dependencies datasource='csv.41512.898800844909'>
        <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        </column>
        <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <filter class='categorical' column='[csv.41512.898800844909].[none:Region of Country:nk]'>
        <groupfilter function='level-members' level='[none:Region of Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Highlight1' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 3' type='sheet' worksheet='FirmA Est' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 3' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Bid/Bid Price'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column datatype='real' name='[Bid Price]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_0710826202606272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winning Bid Price]/[Estimated Cost (Millions)]-1' scope-isolation='false' />
            </column>
            <column aggregation='Median' datatype='integer' name='[Number of Competitor Bids]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0710826202606272]' derivation='Avg' name='[avg:Calculation_0710826202606272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bid Price]' derivation='Median' name='[med:Bid Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Competitor Bids]' derivation='Median' name='[med:Number of Competitor Bids:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Region of Country:nk]'>
            <groupfilter function='level-members' level='[none:Region of Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Sector:ok]'>
            <groupfilter function='level-members' level='[none:Sector:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41512.799156550929].[none:Region of Country:nk]</column>
            <column>[csv.41512.799156550929].[none:Sector:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#faf2f2' />
            <format attr='fill-below' id='refline0' value='#f0fae8' />
            <format attr='fill-above' id='refline1' value='#fbf2e2' />
            <format attr='fill-below' id='refline1' value='#eaf7e1' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[none:Win Bid:nk]' />
              <size column='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' />
              <text column='[csv.41512.799156550929].[none:Region of Country:nk]' />
              <text column='[csv.41512.799156550929].[none:Sector:ok]' />
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
              <lod column='[csv.41512.799156550929].[none:Region of Country:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='9.0000000000000000' value-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8487133979797363' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41512.799156550929].[med:Number of Competitor Bids:qk]</rows>
        <cols>[csv.41512.799156550929].[med:Bid Price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cost after Engineering vs Total Estimate'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column aggregation='Avg' caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_0710826202606272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winning Bid Price]/[Estimated Cost (Millions)]-1' scope-isolation='false' />
            </column>
            <column aggregation='Median' datatype='integer' name='[Cost After Engineering Estimate (Thousands)]' role='measure' type='quantitative'>
            </column>
            <column aggregation='CountD' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column-instance column='[Calculation_0710826202606272]' derivation='Avg' name='[avg:Calculation_0710826202606272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Cost After Engineering Estimate (Thousands)]' derivation='Median' name='[med:Cost After Engineering Estimate (Thousands):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimated Cost (Millions)]' derivation='Median' name='[med:Estimated Cost (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[none:Sector:ok]' />
              <text column='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' />
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
              <lod column='[csv.41512.799156550929].[none:Region of Country:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='16' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='2.6315789222717285' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41512.799156550929].[med:Estimated Cost (Millions):qk]</rows>
        <cols>[csv.41512.799156550929].[med:Cost After Engineering Estimate (Thousands):qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cost/Bid price'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column datatype='real' name='[Bid Price]' role='measure' type='quantitative'>
            </column>
            <column aggregation='CountD' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column-instance column='[Estimated Cost (Millions)]' derivation='CountD' name='[ctd:Estimated Cost (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Bid Price]' derivation='Sum' name='[sum:Bid Price:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
              <lod column='[csv.41512.799156550929].[none:Region of Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
          </pane>
        </panes>
        <rows>[csv.41512.799156550929].[ctd:Estimated Cost (Millions):qk]</rows>
        <cols>[csv.41512.799156550929].[sum:Bid Price:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Cost/Bids'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column aggregation='CountD' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Median' datatype='integer' name='[Number of Competitor Bids]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Estimated Cost (Millions)]' derivation='Median' name='[med:Estimated Cost (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Competitor Bids]' derivation='Median' name='[med:Number of Competitor Bids:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline2' value='#f2e6e6' />
            <format attr='fill-below' id='refline2' value='#eaf7e1' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='line-pattern' id='refline0' value='dotted' />
          </style-rule>
        </style>
        <panes>
          <pane id='4'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[none:Win Bid:nk]' />
              <lod column='[csv.41512.799156550929].[none:Region of Country:nk]' />
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[med:Estimated Cost (Millions):qk]' formula='constant' id='refline0' label-type='value' paired-id='refline1' scope='per-table' symmetric='false' value='190.00000000000000' value-column='[csv.41512.799156550929].[med:Estimated Cost (Millions):qk]' z-order='1' />
            <reference-line axis-column='[csv.41512.799156550929].[med:Estimated Cost (Millions):qk]' formula='constant' id='refline1' label-type='value' paired-id='refline0' scope='per-table' symmetric='false' value='235.00000000000000' value-column='[csv.41512.799156550929].[med:Estimated Cost (Millions):qk]' z-order='1' />
            <reference-line axis-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' formula='constant' id='refline2' label-type='automatic' scope='per-table' value='8.5' value-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' z-order='2' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9418128728866577' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41512.799156550929].[med:Estimated Cost (Millions):qk]</rows>
        <cols>[csv.41512.799156550929].[med:Number of Competitor Bids:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Firm A'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmA#csv (FirmA.csv)' name='csv.41512.898384386572' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898384386572'>
            <column datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Median' datatype='integer' name='[Days Until Estimate Needed]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column-instance column='[Days Until Estimate Needed]' derivation='Median' name='[med:Days Until Estimate Needed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.898384386572].[none:Sector:ok]'>
            <groupfilter function='level-members' level='[none:Sector:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41512.898384386572].[none:Sector:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41512.898384386572].[med:Days Until Estimate Needed:qk]' palette='tableau-red-green' type='interpolated' />
            <encoding attr='color' field='[csv.41512.898384386572].[sum:Number of Records:qk]' num-steps='5' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.898384386572].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41512.898384386572].[med:Days Until Estimate Needed:qk]</rows>
        <cols>([csv.41512.898384386572].[none:Accuracy:nk] / [csv.41512.898384386572].[none:Sector:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Firm B - Performance based on '>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmB#csv (FirmB.csv)' name='csv.41512.898800844909' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898800844909'>
            <column aggregation='CountD' datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Median' datatype='integer' name='[Days Until Estimate Needed]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' datatype-customized='true' name='[Sector]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Transportation' />
                <alias key='&quot;10&quot;' value='Military' />
                <alias key='&quot;2&quot;' value='Lodging' />
                <alias key='&quot;3&quot;' value='Multi-family Residential' />
                <alias key='&quot;4&quot;' value=' Amusement and Recreation' />
                <alias key='&quot;5&quot;' value='Highway and Street' />
                <alias key='&quot;6&quot;' value='Education' />
                <alias key='&quot;7&quot;' value='Healthcare' />
                <alias key='&quot;8&quot;' value='Manufacturing' />
                <alias key='&quot;9&quot;' value='Power' />
              </aliases>
            </column>
            <column-instance column='[Days Until Estimate Needed]' derivation='Median' name='[med:Days Until Estimate Needed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.898800844909].[Action (Accuracy)]'>
            <groupfilter function='level-members' level='[Accuracy]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41512.898800844909].[none:Sector:nk]'>
            <groupfilter function='level-members' level='[none:Sector:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41512.898800844909].[none:Sector:nk]</column>
            <column>[csv.41512.898800844909].[Action (Accuracy)]</column>
            <column>[csv.41512.898800844909].[none:Region of Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='subtitle' class='0' field='[csv.41512.898800844909].[med:Days Until Estimate Needed:qk]' scope='rows' value='' />
            <format attr='auto-subtitle' class='0' field='[csv.41512.898800844909].[med:Days Until Estimate Needed:qk]' scope='rows' value='true' />
            <encoding attr='space' class='0' field='[csv.41512.898800844909].[med:Days Until Estimate Needed:qk]' field-type='quantitative' max='30.000000000000000' min='0.00000000000000000' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[csv.41512.898800844909].[none:Sector:nk]' value='true' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41512.898800844909].[sum:Number of Records:qk]' num-steps='5' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.898800844909].[sum:Number of Records:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41512.898800844909].[med:Days Until Estimate Needed:qk]</rows>
        <cols>([csv.41512.898800844909].[none:Accuracy:nk] / [csv.41512.898800844909].[none:Sector:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='FirmA Est'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmA#csv (FirmA.csv)' name='csv.41512.898384386572' />
            <datasource caption='FirmB#csv (FirmB.csv)' name='csv.41512.898800844909' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898384386572'>
            <column datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Median' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column-instance column='[Estimated Cost (Millions)]' derivation='Median' name='[med:Estimated Cost (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41512.898800844909'>
            <column datatype='string' datatype-customized='true' name='[Sector]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Transportation' />
                <alias key='&quot;10&quot;' value='Military' />
                <alias key='&quot;2&quot;' value='Lodging' />
                <alias key='&quot;3&quot;' value='Multi-family Residential' />
                <alias key='&quot;4&quot;' value=' Amusement and Recreation' />
                <alias key='&quot;5&quot;' value='Highway and Street' />
                <alias key='&quot;6&quot;' value='Education' />
                <alias key='&quot;7&quot;' value='Healthcare' />
                <alias key='&quot;8&quot;' value='Manufacturing' />
                <alias key='&quot;9&quot;' value='Power' />
              </aliases>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.898384386572].[Exclusions (Accuracy,Sector)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Accuracy:nk]' />
                <groupfilter function='level-members' level='[none:Sector:ok]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Accuracy:nk]' member='&quot;Excellent&quot;' />
                <groupfilter function='member' level='[none:Sector:ok]' member='8' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[csv.41512.898384386572].[none:Region of Country:nk]'>
            <groupfilter function='level-members' level='[none:Region of Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41512.898384386572].[none:Region of Country:nk]</column>
            <column>[csv.41512.898384386572].[Exclusions (Accuracy,Sector)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.898384386572].[none:Sector:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41512.898384386572].[med:Estimated Cost (Millions):qk]</rows>
        <cols>([csv.41512.898384386572].[none:Accuracy:nk] / [csv.41512.898384386572].[none:Sector:ok])</cols>
        <join-lod-exclude-overrides>
          <column>[csv.41512.898800844909].[Sector]</column>
        </join-lod-exclude-overrides>
      </table>
    </worksheet>
    <worksheet name='FirmB by region'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmB#csv (FirmB.csv)' name='csv.41512.898800844909' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898800844909'>
            <column aggregation='CountD' datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[csv.41512.898800844909].[none:Region of Country:nk]' direction='ASC'>
            <dictionary>
              <bucket>&quot;Mid-west&quot;</bucket>
              <bucket>&quot;Northeast&quot;</bucket>
              <bucket>&quot;Southeast&quot;</bucket>
              <bucket>&quot;Southwest&quot;</bucket>
              <bucket>&quot;West&quot;</bucket>
              <bucket>%all%</bucket>
            </dictionary>
          </sort>
          <slices>
            <column>[csv.41512.898800844909].[none:Region of Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.898800844909].[none:Region of Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41512.898800844909].[sum:Number of Records:qk]</rows>
        <cols>([csv.41512.898800844909].[none:Accuracy:nk] / [csv.41512.898800844909].[none:Region of Country:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Margin/Bids'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column aggregation='Avg' caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_0710826202606272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winning Bid Price]/[Estimated Cost (Millions)]-1' scope-isolation='false' />
            </column>
            <column aggregation='Median' datatype='integer' name='[Number of Competitor Bids]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0710826202606272]' derivation='Avg' name='[avg:Calculation_0710826202606272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Competitor Bids]' derivation='Median' name='[med:Number of Competitor Bids:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#ebd1d1' />
            <format attr='fill-below' id='refline0' value='#eaf7e1' />
            <format attr='stroke-size' id='refline0' value='3' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[none:Win Bid:nk]' />
              <lod column='[csv.41512.799156550929].[none:Region of Country:nk]' />
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' formula='constant' id='refline0' label-type='automatic' scope='per-table' value='8.5' value-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8719882965087891' />
                <format attr='shape' value=':filled/circle' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]</rows>
        <cols>[csv.41512.799156550929].[med:Number of Competitor Bids:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Profit Margin'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Pct' datatype='real' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='0.050000000000000003'>
              <calculation class='tableau' formula='0.050000000000000003' />
              <range granularity='0.0050000000000000001' max='0.12' min='0.00000000000000000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column aggregation='Avg' caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_0710826202606272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winning Bid Price]/[Estimated Cost (Millions)]-1' scope-isolation='false' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0710826202606272]' derivation='Avg' name='[avg:Calculation_0710826202606272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' max='0.12' min='0.029999999999999999' palette='tableau-red-green' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#f2e6e6' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
            <format attr='stroke-size' id='refline0' value='4' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' formula='average' id='refline0' label-type='automatic' scope='per-pane' value-column='[Parameters].[Parameter 2]' z-order='1' />
          </pane>
        </panes>
        <rows>([csv.41512.799156550929].[none:Win Bid:nk] * [csv.41512.799156550929].[avg:Calculation_0710826202606272:qk])</rows>
        <cols>([csv.41512.799156550929].[none:Region of Country:nk] / [csv.41512.799156550929].[none:Sector:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 13'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmB#csv (FirmB.csv)' name='csv.41512.898800844909' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898800844909'>
            <column aggregation='CountD' datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Median' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' datatype-customized='true' name='[Sector]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Transportation' />
                <alias key='&quot;10&quot;' value='Military' />
                <alias key='&quot;2&quot;' value='Lodging' />
                <alias key='&quot;3&quot;' value='Multi-family Residential' />
                <alias key='&quot;4&quot;' value=' Amusement and Recreation' />
                <alias key='&quot;5&quot;' value='Highway and Street' />
                <alias key='&quot;6&quot;' value='Education' />
                <alias key='&quot;7&quot;' value='Healthcare' />
                <alias key='&quot;8&quot;' value='Manufacturing' />
                <alias key='&quot;9&quot;' value='Power' />
              </aliases>
            </column>
            <column-instance column='[Estimated Cost (Millions)]' derivation='Median' name='[med:Estimated Cost (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.898800844909].[Exclusions (Accuracy,Sector)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:Accuracy:nk]' />
                <groupfilter function='level-members' level='[none:Sector:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[none:Accuracy:nk]' member='&quot;Excellent&quot;' />
                <groupfilter function='union'>
                  <groupfilter function='member' level='[none:Sector:nk]' member='&quot;4&quot;' />
                  <groupfilter function='member' level='[none:Sector:nk]' member='&quot;8&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[csv.41512.898800844909].[none:Region of Country:nk]</column>
            <column>[csv.41512.898800844909].[Exclusions (Accuracy,Sector)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.898800844909].[none:Sector:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41512.898800844909].[med:Estimated Cost (Millions):qk]</rows>
        <cols>([csv.41512.898800844909].[none:Accuracy:nk] / [csv.41512.898800844909].[none:Sector:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 14'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmB#csv (FirmB.csv)' name='csv.41512.898800844909' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898800844909'>
            <column caption='Accuracy Num' datatype='integer' name='[Calculation_2230826224936933]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Accuracy] =&quot;Excellent&quot; then 5 &#13;&#10;elseif [Accuracy] =&quot;Above Average&quot; then 4&#13;&#10;elseif [Accuracy] =&quot;Average&quot; then 3&#13;&#10;elseif [Accuracy] =&quot;Below Average&quot; then 2&#13;&#10;elseif [Accuracy] =&quot;Poor&quot; then 1 end' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Company ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column datatype='string' datatype-customized='true' name='[Sector]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;1&quot;' value='Transportation' />
                <alias key='&quot;10&quot;' value='Military' />
                <alias key='&quot;2&quot;' value='Lodging' />
                <alias key='&quot;3&quot;' value='Multi-family Residential' />
                <alias key='&quot;4&quot;' value=' Amusement and Recreation' />
                <alias key='&quot;5&quot;' value='Highway and Street' />
                <alias key='&quot;6&quot;' value='Education' />
                <alias key='&quot;7&quot;' value='Healthcare' />
                <alias key='&quot;8&quot;' value='Manufacturing' />
                <alias key='&quot;9&quot;' value='Power' />
              </aliases>
            </column>
            <column-instance column='[Calculation_2230826224936933]' derivation='CountD' name='[ctd:Calculation_2230826224936933:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company ID]' derivation='None' name='[none:Company ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <slices>
            <column>[csv.41512.898800844909].[none:Region of Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41512.898800844909].[none:Sector:nk]' />
              <lod column='[csv.41512.898800844909].[none:Company ID:ok]' />
              <lod column='[csv.41512.898800844909].[none:Region of Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
          </pane>
        </panes>
        <rows>[csv.41512.898800844909].[sum:Number of Records:qk]</rows>
        <cols>[csv.41512.898800844909].[ctd:Calculation_2230826224936933:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 15'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmA#csv (FirmA.csv)' name='csv.41512.898384386572' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898384386572'>
            <column caption='AccuNum' datatype='integer' name='[Calculation_6400826225807171]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Accuracy] =&quot;Excellent&quot; then 5 &#13;&#10;elseif [Accuracy] =&quot;Above Average&quot; then 4&#13;&#10;elseif [Accuracy] =&quot;Average&quot; then 3&#13;&#10;elseif [Accuracy] =&quot;Below Average&quot; then 2&#13;&#10;elseif [Accuracy] =&quot;Poor&quot; then 1 end' scope-isolation='false' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[Company ID]' role='dimension' type='ordinal'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column-instance column='[Calculation_6400826225807171]' derivation='CountD' name='[ctd:Calculation_6400826225807171:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Company ID]' derivation='None' name='[none:Company ID:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[csv.41512.898384386572].[none:Sector:ok]' />
              <lod column='[csv.41512.898384386572].[none:Company ID:ok]' />
              <lod column='[csv.41512.898384386572].[none:Region of Country:nk]' />
            </encodings>
            <trendline enable-confidence-bands='false' enabled='true' exclude-color='false' exclude-intercept='false' exclude-panes='false' fit='linear'>
            </trendline>
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='899' />
                <format attr='maxwidth' value='899' />
                <format attr='minheight' value='796' />
                <format attr='maxheight' value='796' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41512.898384386572].[sum:Number of Records:qk]</rows>
        <cols>[csv.41512.898384386572].[ctd:Calculation_6400826225807171:qk]</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 17'>
      <table>
        <view>
          <datasources>
            <datasource caption='FirmA#csv (FirmA.csv)' name='csv.41512.898384386572' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.898384386572'>
            <column datatype='string' name='[Accuracy]' role='dimension' type='nominal'>
            </column>
            <column caption='AccuNum' datatype='integer' name='[Calculation_6400826225807171]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='if [Accuracy] =&quot;Excellent&quot; then 5 &#13;&#10;elseif [Accuracy] =&quot;Above Average&quot; then 4&#13;&#10;elseif [Accuracy] =&quot;Average&quot; then 3&#13;&#10;elseif [Accuracy] =&quot;Below Average&quot; then 2&#13;&#10;elseif [Accuracy] =&quot;Poor&quot; then 1 end' scope-isolation='false' />
            </column>
            <column aggregation='Median' datatype='integer' name='[Days Until Estimate Needed]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Median' datatype='real' name='[Estimated Cost (Millions)]' role='measure' type='quantitative'>
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column-instance column='[Days Until Estimate Needed]' derivation='Median' name='[med:Days Until Estimate Needed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Estimated Cost (Millions)]' derivation='Median' name='[med:Estimated Cost (Millions):qk]' pivot='key' type='quantitative' />
            <column-instance column='[Accuracy]' derivation='None' name='[none:Accuracy:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_6400826225807171]' derivation='Sum' name='[sum:Calculation_6400826225807171:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.898384386572].[none:Region of Country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[csv.41512.898384386572].[Multiple Values]</rows>
        <cols>([csv.41512.898384386572].[none:Accuracy:nk] / [csv.41512.898384386572].[none:Region of Country:nk])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Count' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0000000000000000'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0000000000000000' max='20.000000000000000' min='0.00000000000000000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column aggregation='Median' datatype='real' name='[Winning Bid Price]' role='measure' type='quantitative'>
            </column>
            <column-instance column='[Winning Bid Price]' derivation='Median' name='[med:Winning Bid Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Region of Country:nk]'>
            <groupfilter function='level-members' level='[none:Region of Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Sector:ok]'>
            <groupfilter function='level-members' level='[none:Sector:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <sort class='computed' column='[csv.41512.799156550929].[none:Sector:ok]' direction='ASC' using='[csv.41512.799156550929].[sum:Number of Records:qk]'>
            <groupfilter function='member' level='[none:Win Bid:nk]' member='&quot;No&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </sort>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Win Bid:nk]'>
            <groupfilter function='level-members' level='[none:Win Bid:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41512.799156550929].[none:Win Bid:nk]</column>
            <column>[csv.41512.799156550929].[none:Region of Country:nk]</column>
            <column>[csv.41512.799156550929].[none:Sector:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[csv.41512.799156550929].[none:Sector:ok]' value='23' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='247.51499999999999' field='[csv.41512.799156550929].[med:Winning Bid Price:qk]' max='428.56999999999999' min='66.459999999999994' num-steps='7' palette='tableau-red-green' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#ebd1d1' />
            <format attr='stroke-size' id='refline0' value='4' />
            <format attr='stroke-color' id='refline0' value='#b40f1e' />
            <format attr='line-pattern' id='refline0' value='dashed' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[med:Winning Bid Price:qk]' />
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[sum:Number of Records:qk]' formula='average' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41512.799156550929].[none:Win Bid:nk] * [csv.41512.799156550929].[sum:Number of Records:qk])</rows>
        <cols>([csv.41512.799156550929].[none:Region of Country:nk] / [csv.41512.799156550929].[none:Sector:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='Sheet 3'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Online' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Count' datatype='real' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='4.0000000000000000'>
              <calculation class='tableau' formula='4.0' />
              <range granularity='1.0000000000000000' max='20.000000000000000' min='0.00000000000000000' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column caption='WinPrice over est cost ratio' datatype='real' default-format='p0.00%' name='[Calculation_2550826195247717]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='median([Winning Bid Price])/median([Estimated Cost (Millions)])-1' scope-isolation='false' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_2550826195247717]' derivation='User' name='[usr:Calculation_2550826195247717:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='font-size' field='[csv.41512.799156550929].[none:Sector:ok]' value='14' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#ebd1d1' />
            <format attr='stroke-color' id='refline0' value='#d8504c' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='font-size' value='14' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='um_light_countries' value='true' />
            <format attr='enabled' id='um_light_states' value='true' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='false' />
            <format attr='enabled' id='pp2_statelabels' value='false' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='3'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[none:Sector:ok]' />
              <text column='[csv.41512.799156550929].[usr:Calculation_2550826195247717:qk]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[sum:Number of Records:qk]' formula='average' id='refline0' label-type='automatic' scope='per-table' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <style>
              <style-rule element='datalabel'>
                <format attr='font-size' value='18' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([csv.41512.799156550929].[none:Win Bid:nk] * [csv.41512.799156550929].[sum:Number of Records:qk])</rows>
        <cols>([csv.41512.799156550929].[none:Region of Country:nk] / [csv.41512.799156550929].[none:Sector:ok])</cols>
      </table>
    </worksheet>
    <worksheet name='stay out the midwest'>
      <table>
        <view>
          <datasources>
            <datasource caption='BidHist#csv (BidHist.csv)' name='csv.41512.799156550929' />
          </datasources>
          <datasource-dependencies datasource='csv.41512.799156550929'>
            <column datatype='real' name='[Bid Price]' role='measure' type='quantitative'>
            </column>
            <column aggregation='Avg' caption='Profit Margin' datatype='real' default-format='p0.00%' name='[Calculation_0710826202606272]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Winning Bid Price]/[Estimated Cost (Millions)]-1' scope-isolation='false' />
            </column>
            <column aggregation='Median' datatype='integer' name='[Number of Competitor Bids]' role='measure' type='quantitative'>
            </column>
            <column datatype='string' name='[Region of Country]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
            </column>
            <column aggregation='Sum' datatype='integer' name='[Sector]' role='dimension' type='ordinal'>
              <aliases>
                <alias key='1' value='Transportation' />
                <alias key='2' value='Lodging' />
                <alias key='3' value='Multi-family Residential' />
                <alias key='4' value='Amusement and Recreation' />
                <alias key='5' value='Highway and Street' />
                <alias key='6' value='Education' />
                <alias key='7' value='Healthcare' />
                <alias key='8' value='Manufacturing' />
                <alias key='9' value='Power' />
                <alias key='10' value='Military' />
              </aliases>
            </column>
            <column datatype='string' name='[Win Bid]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Calculation_0710826202606272]' derivation='Avg' name='[avg:Calculation_0710826202606272:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Bid Price]' derivation='Median' name='[med:Bid Price:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Competitor Bids]' derivation='Median' name='[med:Number of Competitor Bids:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Region of Country]' derivation='None' name='[none:Region of Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sector]' derivation='None' name='[none:Sector:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Win Bid]' derivation='None' name='[none:Win Bid:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Region of Country:nk]'>
            <groupfilter function='level-members' level='[none:Region of Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Sector:ok]'>
            <groupfilter function='level-members' level='[none:Sector:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[csv.41512.799156550929].[none:Win Bid:nk]'>
            <groupfilter function='level-members' level='[none:Win Bid:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[csv.41512.799156550929].[none:Region of Country:nk]</column>
            <column>[csv.41512.799156550929].[none:Sector:ok]</column>
            <column>[csv.41512.799156550929].[none:Win Bid:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#faf2f2' />
            <format attr='fill-below' id='refline0' value='#f0fae8' />
            <format attr='fill-above' id='refline1' value='#fbf2e2' />
            <format attr='fill-below' id='refline1' value='#eaf7e1' />
          </style-rule>
        </style>
        <panes>
          <pane id='2'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[csv.41512.799156550929].[none:Region of Country:nk]' />
              <size column='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' />
              <text column='[csv.41512.799156550929].[none:Region of Country:nk]' />
              <text column='[csv.41512.799156550929].[none:Sector:ok]' />
              <text column='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' />
              <lod column='[csv.41512.799156550929].[none:Sector:ok]' />
              <lod column='[csv.41512.799156550929].[none:Region of Country:nk]' />
              <lod column='[csv.41512.799156550929].[none:Win Bid:nk]' />
            </encodings>
            <reference-line axis-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' formula='constant' id='refline1' label-type='automatic' scope='per-table' value='9.0000000000000000' value-column='[csv.41512.799156550929].[med:Number of Competitor Bids:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8487133979797363' />
                <format attr='shape' value=':filled/circle' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='highlight' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[csv.41512.799156550929].[med:Number of Competitor Bids:qk]</rows>
        <cols>[csv.41512.799156550929].[med:Bid Price:qk]</cols>
      </table>
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99767' x='0' y='0'>
              <zone h='50000' id='1' name='Cost/Bids' show-title='true' w='99767' x='0' y='0'>
              </zone>
              <zone h='50000' id='7' name='Margin/Bids' show-title='true' w='99767' x='0' y='50000'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='11875' id='6' name='Cost/Bids' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='color' w='19800' x='74600' y='9000'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style>
      </style>
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='99767' x='0' y='0'>
              <zone h='50000' id='1' name='Firm A' show-title='true' w='99767' x='0' y='0'>
              </zone>
              <zone h='50000' id='7' name='Firm B - Performance based on ' show-title='true' w='99767' x='0' y='50000'>
              </zone>
            </zone>
          </zone>
        </zone>
        <zone h='6000' id='6' name='Firm A' param='[csv.41512.898384386572].[sum:Estimated Cost (Millions):qk]' type='color' w='14000' x='81700' y='11125'>
        </zone>
        <zone h='13129' id='8' name='Firm B - Performance based on ' param='[csv.41512.898800844909].[sum:Number of Records:qk]' type='color' w='14020' x='74636' y='49234'>
        </zone>
      </zones>
    </dashboard>
    <dashboard name='Dashboard 3'>
      <style>
      </style>
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='100000' id='5' param='horz' type='layout-flow' w='100000' x='0' y='0'>
            <zone h='100000' id='3' type='layout-basic' w='84000' x='0' y='0'>
              <zone h='50000' id='1' name='FirmA Est' show-title='true' w='84000' x='0' y='0'>
              </zone>
              <zone h='50000' id='8' name='Sheet 13' show-title='true' w='84000' x='0' y='50000'>
              </zone>
            </zone>
            <zone fixed-size='160' h='100000' id='4' is-fixed='true' param='vert' type='layout-flow' w='16000' x='84000' y='0'>
              <zone h='17500' id='6' name='FirmA Est' param='[csv.41512.898384386572].[none:Region of Country:nk]' type='filter' w='16000' x='84000' y='0'>
              </zone>
              <zone h='27750' id='7' name='FirmA Est' param='[csv.41512.898384386572].[none:Sector:ok]' type='color' w='16000' x='84000' y='17500'>
              </zone>
              <zone h='17000' id='9' name='Sheet 13' param='[csv.41512.898800844909].[none:Region of Country:nk]' type='filter' w='16000' x='84000' y='45250'>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
    </dashboard>
  </dashboards>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.799156550929].[med:Winning Bid Price:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='filter' />
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Region of Country:nk]' type='filter' />
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Sector:ok]' type='filter' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[med:Winning Bid Price:qk]</field>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='3' param='[csv.41512.799156550929].[none:Sector:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cost/Bids'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='4' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Margin/Bids'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 1'>
      <active id='7' />
      <zones>
        <zone name='Cost/Bids'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Margin/Bids'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Cost/Bids' pane-specification-id='4' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='color'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Profit Margin'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='slider' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Bid/Bid Price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='color' />
            <card pane-specification-id='2' param='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' type='size' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Region of Country:nk]' type='filter' />
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Sector:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[:Measure Names]</field>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='stay out the midwest'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41512.799156550929].[avg:Calculation_0710826202606272:qk]' type='size' />
            <card pane-specification-id='2' param='[csv.41512.799156550929].[none:Region of Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Region of Country:nk]' type='filter' />
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Sector:ok]' type='filter' />
            <card mode='radiolist' param='[csv.41512.799156550929].[none:Win Bid:nk]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[:Measure Names]</field>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cost/Bid price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
          <field>[csv.41512.799156550929].[none:Win Bid:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Cost after Engineering vs Total Estimate'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.799156550929].[none:Sector:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.799156550929].[none:Region of Country:nk]</field>
          <field>[csv.41512.799156550929].[none:Sector:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Firm B - Performance based on '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.898800844909].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[csv.41512.898800844909].[none:Sector:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898800844909].[none:Accuracy:nk]</field>
          <field>[csv.41512.898800844909].[none:Company ID:ok]</field>
          <field>[csv.41512.898800844909].[none:Region of Country:nk]</field>
          <field>[csv.41512.898800844909].[none:Sector:nk]</field>
          <field>[csv.41512.898800844909].[sum:Estimated Cost (Millions):qk]</field>
          <field>[csv.41512.898800844909].[sum:Number of Records:qk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Firm A'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='2' param='[csv.41512.898384386572].[sum:Number of Records:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='radiolist' param='[csv.41512.898384386572].[none:Sector:ok]' type='filter' values='relevant' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
      </viewpoint>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898384386572].[none:Accuracy:nk]</field>
          <field>[csv.41512.898384386572].[none:Sector:ok]</field>
          <field>[csv.41512.898384386572].[sum:Number of Records:qk]</field>
          <field>[csv.41512.898800844909].[none:Accuracy:nk]</field>
          <field>[csv.41512.898800844909].[none:Sector:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 2'>
      <active id='7' />
      <zones>
        <zone name='Firm A'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
        </zone>
        <zone name='Firm B - Performance based on '>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41512.898800844909].[sum:Number of Records:qk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Firm A' pane-specification-id='0' param='[csv.41512.898384386572].[sum:Estimated Cost (Millions):qk]' type='color'>
        </zone>
        <zone name='Firm B - Performance based on ' pane-specification-id='0' param='[csv.41512.898800844909].[sum:Number of Records:qk]' type='color'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='FirmA Est'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.898384386572].[none:Sector:ok]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41512.898384386572].[none:Region of Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898384386572].[none:Accuracy:nk]</field>
          <field>[csv.41512.898384386572].[none:Region of Country:nk]</field>
          <field>[csv.41512.898384386572].[none:Sector:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 13'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.898800844909].[none:Sector:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[csv.41512.898800844909].[none:Region of Country:nk]' type='filter' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898800844909].[none:Accuracy:nk]</field>
          <field>[csv.41512.898800844909].[none:Region of Country:nk]</field>
          <field>[csv.41512.898800844909].[none:Sector:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='dashboard' maximized='0' name='Dashboard 3'>
      <active id='1' />
      <zones>
        <zone name='FirmA Est'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41512.898384386572].[none:Sector:ok]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='Sheet 13'>
          <viewpoint>
            <current-page>
              <multibucket>
              </multibucket>
            </current-page>
            <zoom type='entire-view' />
          </viewpoint>
          <highlight>
            <color-one-way>
              <field>[csv.41512.898800844909].[none:Sector:nk]</field>
            </color-one-way>
          </highlight>
        </zone>
        <zone name='FirmA Est' pane-specification-id='0' param='[csv.41512.898384386572].[none:Sector:ok]' type='color'>
        </zone>
      </zones>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 14'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898800844909].[none:Accuracy:nk]</field>
          <field>[csv.41512.898800844909].[none:Company ID:ok]</field>
          <field>[csv.41512.898800844909].[none:Region of Country:nk]</field>
          <field>[csv.41512.898800844909].[none:Sector:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='Sheet 15'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898384386572].[none:Company ID:ok]</field>
          <field>[csv.41512.898384386572].[none:Region of Country:nk]</field>
          <field>[csv.41512.898384386572].[none:Sector:ok]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='0' name='FirmB by region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.898800844909].[none:Region of Country:nk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898800844909].[none:Accuracy:nk]</field>
          <field>[csv.41512.898800844909].[none:Region of Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 17'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card pane-specification-id='0' param='[csv.41512.898384386572].[none:Region of Country:nk]' type='color' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[csv.41512.898384386572].[none:Accuracy:nk]</field>
          <field>[csv.41512.898384386572].[none:Region of Country:nk]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cost/Bids' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Margin/Bids' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      AehH3nO68P+uAdS6/2mLzwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Profit Margin' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Bid/Bid Price' width='192'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='192' name='stay out the midwest' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cost/Bid price' width='192'>
      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
      yFs4OQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Cost after Engineering vs Total Estimate' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Firm B - Performance based on ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAABFcSURBVHhe7Z3ZbyPJfccT/ydBXpLH
      PAUBkvjJL0GAwMhrkAfnL0gC+CEJYgPrAEZs2N7AsA3sJo6DrLNz7czO7By6RYmSqGNEUSIl
      URJ13xTvs9lNfVO/LopF6pidEYYasvv7Ab4Qi9UHu7o+VLVYav6OAOB3Vb7BMH6L2/nPz8+/
      U6/Xf80wfosI8A314D/VT0J8BwUgXU3dsVEolqBGKV8bzTmqlapbLuQyyOQKqDfq7ZqFqlVr
      W54CkK4mkzxEcGIKy7EYorEoIgsLiK2sYP71HJaWIpicmkYkEsHKShxnmRwcq4LNrV1XnGh4
      DrOv5zE1NYXwvPo5GURgLIi52VksrazDqZ9TANLd7G9v4PXcLILjQcyqjjs7M4PRwCjG3I48
      hecv+jA3H0ZochLJbBHlYg7Hpymc1x0k1pYxMTGOweERTE4EMaPWHQuMYXRkBNH1bXf7FIB0
      NXXVkVX/hGVVVWQIo1JVj2s11GRIU1WpVHB2dua+o8vQRoY8Qk0ta6khj6xbU8vL+hfbcJy6
      u8w7CWDbdnPs5Hccx3FDerst3kkAMU9svCtKhRxOTpOo2U7zwkViVSvIZDJtz8u7gLwD3BXy
      jiLpGOqYsuoYi0X1a129y7UefzPq3VHa4eKd703pJB1vi2uoqXf1bL5w7bFezpvoagGWI9MI
      BKcxPxvC1PQswmEZ6wUxOjqCr549RX//IEKhaYyNj+Ply5c4y5Uaa3aeTp/0ajGDRw/uI6CO
      9aU6zpnpkHuss3NzmJoYw+xCVF0gHuH+/fuILC66Y+NAIIDx8THMqWUCaqwbmppU5SDG1UVk
      qdK51/ohBNhcCePRl8+xGFnAdCikj31iQrXTFMaDk5gIBtV4fwQL0TU1JGqsdA1dLUBiVZ3Y
      1xFMjA7iVd8gJkNT6H/1AqNj4xge7MeXT56qzh/E5FQII+rCJl0oN9bsPJ0+6cnDHXWxNoxX
      r1656R/oVyd2AkNDgwiMqLaYXcB2Iu4e95S6ABxSP/v6+jA0PKw6xCQePnyAB/fv4fP7DzEw
      HEDRSwKcO4i8nlYXw2MYHxtVPwPqzbDP7ReB4QHcu/8A9z6/hwcPH2I2stK7Ath2DaVSyd2v
      e/Hi/pSoBr8oNxpf6p07fG2dPukX42pLHWNFDe/kgk+OVdrEluNVcRzbXUZeh1yfXVwoyrKl
      UhGJ9TgOT85UO+khVKfodFtcQR2LHK+jcnHs0hfksbRXLpPC6mpcDZGK6jm7sdL1vFGAbOoU
      O7u7SCQS7gcK2WxWj0nLZd8nn8+7ua7Ob+nltnijAOnTfTXkeKnGoWPYO5Z3krv9DdDN3Pm7
      XhfTy23xRgHOTg4Qi8bci6xcsUwBWqAABs8KcMHF+JECGCiAwfMCXEABDBTAQAF8CAUwUAAf
      QgEMFMCHUAADBfAhFMBAAXwIBTBQAB9CAQyeFeDylFIKYKAABk8KcF63sbUex8LCAubmI7Bs
      hwK0QAEMHhXAwXZiDZPyP5VDo0jliu6EJwqgoQAGTwpQV78Bdre3sH9wgL39Q9hOnb8BWqAA
      Bk8KcB0UwEABDBTAh1AAAwXwIRTAQAF8CAUwUAAfQgEMFMCHUAADBfAhFMBAAXwIBTBQAB9C
      AQweFUDfb1NutFSRLxxQz1AAAwUweFIAPRlu1b3H4szcAipWzb2REAXQUACDJwWQuUDx2JJ7
      n8nRQBCZQsm9KxwF0FAAgycFOD+vI5NKuTNAc7m8+6UDHAIZKIDBkwJcBwUwUAADBfAhFMBA
      AXwIBTBQAB9CAQwUwIdQAAMF8CEUwEABfAgFMFAAH0IBDBTAh1AAg0cFOEelUkat8U18nAzX
      DgUweFIAdzLcxiqWYjFMT0+jbDmcDNcCBTB4UgCZDLcaW8LiYgSDg4PIFCucDNcCBTB4UgB3
      Mlw6jVKl6g595P64HAIZKIDBkwJcBwUwUAADBfAhFMBAAXwIBTBQAB9CAQwUwIdQAAMF8CEU
      wEABfAgFMFAAH0IBDBTAh1AAgycFkE+C06kkUqkUTpNncOq8LUorFMDgTQHqDva2NxCNrWAp
      sohsocy5QC1QAIMnBag7NUQXwkqAKMKRmHtrxFKpRAEaUACDJwWQ/weoWZZ7c1wJJ8O1QwEM
      HhXgKhTAQAEMFMCHUAADBfAhFMBAAXwIBTBQAB9CAQwUwIdQAAMF8CEUwEABfAgFMFAAH0IB
      DJ4UQCbDpc6SSCaTOD455WS4S1AAgzcFaEyGGwuMYmwsiFS+N74l0qnbyBRSSBfOmsmVskpo
      ubnj+4MCGDwpgEyGW1oIY2lpCbOvwyhWrJ6YDFco5zAeHcRI5GUzs2sTqKnjeZ9QAIMnBXAn
      w6mDsm1bxXGf6YUhUL6cRWCxD4Phr5qZXh2nAB3EowJchQIYKICBAnQRFODuoQBdBAW4eyhA
      F/G+BZA/B1drFVRq5WakbFlVCtCAAnQR71uAYiXvrj+xPNyMlDP5FAVoQAG6iPctwHXbk3Iq
      l6QADShAF0EB3g75YNCu222pq+HebaAAXQQFeDs2TuP4bPpTfBb6pJmpROBWn5h7RgBHde6T
      syzWd45Rta4eEAXwjgDzO9P4/tN/xPe+/IdmnoQ/97cAG9sH+Ol/fYHngUVkckWcHR9hd3cH
      q2vrsJ06BWiEArTjCQHksKfDy/j4148xGJx3O/rmahRjwXH0D44gnS+hUChQABUK0I43BFDH
      fXx6hrN0FlbNdivzmRS2d7awGl9HteagUqlQABUK0I4nBJCCbevbH14IcBkOgSjAdXhGgOTh
      DgYHBjAfjauGkGfa6RYB5CRli2mk8qfNyLx/+VMeBXg7KICmTYBatYjA8ACW4lu4rhm6RQDp
      zLPxCQxHXjQzvjTgdlYK8HZQAE2bAOV8Gs+ePMJMZLXrBZBOfblTUoC3hwJoLg2BtvHVs2eY
      Xli+cQhUtSqoWOW21GyrscTd0AsClKwiMuV0M1kVy642aj88dylAupTFfuaoLSXVb7qBdxoC
      yV+BVveimIgNt2X9YEUt/+4Nd1u6XQDpRP2xZ/jpwA+a+dngvyF6sNBY4sNzVwLI9Iofvvo5
      /vxH327mmz/+azxfGmws8WFpE8Aq5/Hy2RPMLa3dKMDS1nxbZ5As70QoQAvSiaQztXYu6WzS
      6bqFuxTgu49+gN/7pz9u5vf/+U9wf+5pY4kPyxUB+l48w+vYOgVoQAG+Hs8IkDrZx8N7v0Xw
      dYwCNKAAX49nBDje28TIaADbBydSvAIFMPuiAAbPCFAuFXBwcIBsvqhK50geH2Jvbw+JzW3Y
      9XMK0AgFaMczAljlAkaHBrC4uuk2xOZqTP1GGMbQiPwLYAn5fP5OBUhmj7F5tNaWfDnX0wLY
      9RrmtqcwstrXTHB9GIVqrrH29chxX24LaR85rpu2J5HHrXWyrLyGXhYgdhjHx0Of4mdDnzQz
      sDzmvnb52fq8LCfLV+wqfjvzuK3uV4H/aRcglzrGy+fqIji6pjYGFLJp7O3vIr624U6GK5fL
      dyaAbE+227qfofBzHKR2e1qAcq2EX43+pK3uhy/+BYfZvcba1yPHLcff+jqkfUrWzduTyOPW
      OllWXkMvCyDryjZatyn7cOrOjfvKqDeQv/z537bV/dFH32oXIJ85dT8JDoWXr+3OdzkEogDt
      UABDxwSwKkVMjY/c+EkwBTD76oQAVbuCxGkcaycrzeyktuCcO10vwG5yH6PxSYy0ZG47Asu2
      ekeAajGLoYE+RNe2pHgFCmD21QkBjrL7+NGr7+OjZ99t5pOxj911ul2A/ws9xh9+75v4g3/9
      s2a+/cu/Q7qU6R0BCpkkXqhrgMhKQopXoABmX50Q4E0dttsF+Gzq0ZVOKR2upwSQzwG+fPJY
      XwNc0w6dEEDu519WJ7E1MrmOAuh0kwBSl69kVadONSOT/CrV8q0EkOuD49wpdtMHzchEOUud
      K4k8bq2TZWWdjgmQT5/g6ZMv7lSA48yBO6EuGBtqxp1cp14ABeguASp2Gf8b+hQ/6f+omV+M
      /Bj7qZ1bCZCrFPCd3/w9/vTf/6qZv/iPv0H8OOFGHrfWybKyTscEKBWyWIuvYnv/6Nru3AkB
      bjqxFECnmwS46bXvJDdvJcBNnTJ6sOpGHrfWybKyTocEOMfmWhSTM7NYWtlQDaEPuhUvCyDD
      rstDMRmeUQCDxwUAUskjxJaXsX+UlOIVvCqAvPb1g+W2YZgMy2R4RgEMnhdgb3PVvQieXYxL
      0W0Miap3y14W4KZ9UQCD5wU42t3A48dfYGZBX4TubKxhZ/8Ai4uLqNr1jkyF6GUBLMtSbw5O
      W+T7BCiATs8JUMqnMDQ4gNXErvQK7CXWMPt6Fi9evkI6X+7IZLheFuAodYDwxjTmN0LN7Jwk
      3D/VUYAeFCCXOsHkxAQ2dg6liGqljJJ618/lsnBUw3AIpHMhwPZx4trXTgF0ek+AzBniKzFE
      VtZVQ8gz7VAAHQpg1vGUAMVcBltbW0hl81K8AgXQoQBmHU8JILNBQxPjWJJ/iJEnLkEBdCiA
      WcdbApQLCI6NIhrfVBu72hAUQIcCmHU8JUCtUsLkeACvF6IoV692GAqgQwHMOp4SoFrKY3Sw
      z/2ijOvagQLoUACzjqcESJ0cYGY6hPjm9f+eRwF0KIBZx0MCnCOxFkM0GkU4pv8p/jK3FUA6
      hDvBrFpspmJV3HUoAAVorfuAAqghULmEdDqNQun6O/feVoBCJY/QSgDj0cFmwhszsB2bAqhQ
      AFP3QQW4jDSGzG+xbf2VSbcV4E2dkgJQgNa6LhLgHDvrcaxtJLAYWUSxYt16MhwF6C0BpCPV
      HKst7jDWXwIA+5vriK3GsbQUU8Oiyq0nw1GA3hFAXrvcTe6/J37RzG8mf4n1kxX/CWBVykil
      kjg6PlEbv/1kOArQWwK862v3rACXoQA6FMDUUYDGiaAAOrIdCqBDARpQAArQ+jwFUKEA7Z2I
      AuhQABV3exTADQUwdRSAAlzZFwXQoQAUoBkKYJ6nACoU4Or2KAAFaEIBdCjAJWpWFeVyCblc
      XnVICnARCmDqPCzAOdZjiwjNhDA+PolssYJisUgBVCiAqfOwAMDJ/g7CC/OYCs0gV6qgUChQ
      ABUKYOo8LYDjOO79L8tl+e8tDoEuQgFMnacFuAwF0KEApo4CNE4EBdCR7VAAHQrQgAJQgNbn
      KYAKBWjvRBRAhwKouNvrgAA5dTLW9pdVYs0cpw/fuC8KQAGa9LoAt9kXBaAATSiADgUwdRSg
      cSIogI5shwLoUIAGFIACtD7fUwLYNQu5fEF1EgpwEQpg6jwvwOHuBoZGxlAoWz0/GY4CUIDW
      urcUIIGJyWnkir0/GY4CUIDWurcSwHFslNXQR7o3h0A6FMDUeV6AViiADgUwdRSgcSIogI5s
      hwLoUIAGFIACtD5PAVQoQHsnogA6PSuAU7exfZJAfD/azMbBCqq1MgVQoQDmeU8KULOtO+uU
      FMDsiwLoUIAO7YsCUIAmFEBHyhRAhwI0TgQF0JHtUAAdTwhQLRfe6jvCKICObIcC6HhCgO31
      KEbGJr92LhAF0JHtUAAdTwiQPj1EOKwaulpDqVSiACpSpgA6nhfAvWeC6iACh0A6UqYAOj4Q
      wEABdKRMAXQoQONEUAAd2Q4F0KEAHeqUFMDsiwLoUIAO7YsCUIAmFEBHyhRAhwI0TgQF0JHt
      UAAdCtChTkkBzL4ogA4F6NC+KAAFaEIBdKRMAXQ8L8C52mjy9FRtnAJcRMoUQMfzAqRO9tHX
      149cqcrJcI1ImQLoeF6AUjGH5VgMZcvmZLhGpEwBdDwvgIvqIAKHQDpSpgA6/hCgAQXQkTIF
      0KEAjRNBAXRkOxRAhwJ0qFNSALMvCqBDATq0LwpAAZpQAB0pUwAdCtA4ERRAR7ZDAXQoQIc6
      JQUw+6IAOhSgQ/uiABTA7SACBdCRMgXQ8bwAxVway8srqFg2BWhEyhRAp7cF+Bb+H5Ldhj7I
      XI4bAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Firm A' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAACAqSURBVHhe7Z1ZcCPddd8Tv2V5SuUp
      eUqcpywPcZxFSqVspyK/REmVE+fFKbtScqoiJ9GDrThxWXbZKrkUp0qpyJGU2NZnWfo+Ld/s
      MxzuBLEvBMENO0ESJMCdBEDsO8B/7ukGcHsh+Q3JITIDnH/VqSH6ortPn3t/9557uxvzZ0gA
      /qywH2NjGzdTGv/l5eXnut3un7KxjZsRAD8m/vgT8S+LNXZiAFjvtLqdNsqVKkSW8omm6hKN
      ekP5XC7mkS+W0e2Vt1tNNJot3fcZANY7rXzmGG6PD7FoFJFoBMGNDUTjcaytriAcDsLr8yMY
      DCIeTyCbL6LTrGN3b18BJ7K+gsDqGnw+H9bXxL9eNxxON1YCAYTj2+h0LxkA1rutw9QOVlcC
      cLvcCIiGG1heht1hh1NpyD5MTc9hZW0dS14vMoUKapUiTs9zuOx2kNyKweNxwWK1wetxY1ns
      63Q4YbfZENlOKcdnAFjvtLqiIYv2iWazIYxSGGEN8XerhRalNA1h9Tqy2azSo1NqQykPqSW+
      2xQpD+3bEt+n/fvH6HS6ynduBUC73R7kTuOuTqejGOv9jsWtACDyiMZhqVou4uw8g1a7M5i4
      kDUbdeTzed126gWoBxiWqEchezCJayqIa6xUxLAuejnt9Q9M9I4Uh37Pd5M9pB48FleoJXr1
      Qql85bUa7Sa90wDEgn443H6sBZbg8wewvk65nht2uw2TrycwP2/B0pIfTpcLMzMzyBarvT0f
      Xg9d6Y1KHs+ePIZDXOuMuM5l/5JyrYGVFfg8TgQ2ImKCeILHjx8jGAopubHD4YDL5cSK+I5D
      5LpLPq/47IZLTCKr9Yfz9f8HALvxdTx7NYVQcAP+pSX12j0eEScfXG4vPG63yPdt2IhsiZSo
      t9MVeqcBSG6Kil0NwmO3YHbOAu+SD/Oz07A7XbBa5vHq5YRo/G54fUuwiYnNRbnW2/Ph9dCV
      njlOi8maFbOzs4rNL8yLivVgcdECh03EIrCBVDKhXLdPTAAXxb9zc3NYtFpFg/Di6dMnePL4
      ET5+/BQLVgcqowTAZQfBVb+YDDvhctrFvw7RGc4p7cJhXcCjx0/w6ONHePL0KQLB+PsLQLvd
      QrVaVc6rTF6Uf8lEwPufe8Gn8s4QfXvoSu/n1U1xjXWR3tGEj66VYtKm6xXW6bSV75AfND/r
      TxTpu9VqBcntBI7PsiJOagr1UHroWJgkroWutyOsf+3UFuhvilcxn8PmZkKkSBWxrd3b6Wrd
      CoBarabmpOLfcbdSqaTYVWXjZu9zLN7pEeBd1tB7vXdY73MsGIA7igGQYgDGUAyA1EgCcHnZ
      xcnRAQ4ODpDcTaHV6TIAGjEAUqMJgGjoqe0Y5ubnlecuMsUKyuUyA9ATAyA1ogB0sL+3g1gs
      hnAkhnqrrSzHMQCqGACpkQRAlbp23F9B5hRIigGQGmEA9GIApBgAKQZgDMUASDEAYygGQIoB
      GEMxAFIMwBiKAZBiAMZQDIDUiAKgvmVF70/WRcOnpVAGQIoBkBpJAC67bextb8Lr8cDu8qLa
      aCmPjzIAqhgAqZEEoCsASMTCyqt4DqcH+bL6LgADoIoBkBpJAOhhuItcDoViUVhJ+akJToGk
      GACpkQTgKjEAUgyAFAMwhmIApBiAMRQDIMUAjKEYACkGYAzFAEgxAGMoBkCKARhDMQBSIwkA
      vRJ5fLiPdFrYwaHyA6wMgBQDIDWyABymk7BbLbDa3SiUa/xSvEYMgNRIAtDttBALB5HYSiAS
      jaPe5JfitWIApEYSgKvEKZAUAyDFAIyhGAApBmAMxQBIMQBjKAZAigEYQzEAUgzAGIoBkGIA
      xlAMgNSIAnCJer2GVu//YeKX4vViAKRGEgDlpfidTYSjUfj9ftSaHX4pXiMGQGokAaCX4jej
      YYRCQVgsFuQrdX4pXiMGQGokAaCX4vMXF6jWG0rqQ//LJqdAUgyA1EgCcJUYACkGQIoBGEMx
      AFIMwBiKAZBiAMZQDIAUAzCGYgCkGIAxFAMgxQCMoRgAqZEEgN4JPjpIIZVOY3c3hWa7wwBo
      xABIjSwAB6kk4oktRCNRFMpVfileIwZAaiQBoJfi45EwNjfjiMQSaLY6/FK8RgyA1EgCcJU4
      BZJiAKQYgDEUAyDFAIyhGAApBmAMxQBIMQBjKAZAigEYQzEAUgzAGIoBkBpRAC5Rr1WVtf9q
      tcZvhBnEAEiNJADqS/EJuF0uuD0+FKsNfileIwZAaiQBUF6Kj4SwtroKr9fP/1O8QQyA1EgC
      QC/FF/J55fmfUrnCKZBBDIDUSAJwlRgAqfcdgEwli8DhOpYPpO1epJUfQLutGIAx1PsOwOTm
      PP7JH30W//gP//nAvmr/A3RpqL+lGIAx1PtQ6ZeiMbfEXK7VkdYWn0mvYjP4+9/6DP7eN//Z
      wL68+LUHAaDd7aDZbumsK1LsYYuuX+tDq9NiAO6q9wGAg8IRvjT/Vfzq1G8P7H+6/i+qzdrQ
      ACAIv2X5Pn7+f/+ngf2bb/xnWKPe3jeGo3K9il//0e/r/Ph3f/zregA6ggpa6my11F7CKAZA
      6n0AIH6+hZ/54Od0jfzfPvoVFOuloQFAPf1/+M5v4c997m8O7C/88t/G91zPet8Yji4qBXzq
      yz+v8+OvfOFTegAyxylYLAtYi2wpqz5GMQBSDIDUyADQqlfgsC4glNi7cjWAAZBiAKRGBoBa
      6QKTL59hObipjADVcgn5fB5n5xklMAyAFAMgNTIAnB+lMPl6Av6NmACgi+1oCB6vB/MWG4r3
      +Hn0TreNfDmHXCkzsGI1r0yQzitZLB+swa+xu65HD1NU4enzQ9hiPlg1Fj/aEb7fzfuSGIFd
      mwHd8QK7IWX14i4aNwAo7hR/bfyofo7zZ2+YAjXUFCjcS4Fyp0cIh0MIrKyhXGuiWq3eCYBS
      rQhXxAJrcGZggYRHWYa6cj3a9vU7VcQwRRX+XfsT/OVf+Un8pc//xMC+8OGXlUq/i4LpOH78
      135ad7yf/uovIF8p9r5xO40bAHQuir82flQ/P/C8fDMAmrUSZl6/xEpYTILFZ+qhqcG3Ox0q
      vnMKVKoV4AjNwbI+OTD/pksB4G1WxDBFFf6B9WOlMrVBpcq+KwDrqahSKdrjUaVR5d1FwwSA
      2oZ2jV1dZ28PHYDrzvXGAMxNTWA1un3lIM4ASDEAUhSL2Q2Hsrb+r//gPw7sv/zov6Mo2tR7
      A8DF2SGePfoh3KtRBuATxABIXRcL8j1bvnh/ADg92IXNZsfe4Rl9NOkmAGgC0mw1UG/WBtZo
      1RWnGAApKstWczgpnQ3srJxRHll41wEg389LWRzlTwd2UjhDtV4dDQBqlRKODg+RL1Xoo0k3
      AdAW+d5GMgBP1Dow/6YTFRFsBkCq3KjgVyd/G//yw18c2C88+jx2cnvvPADFehn//sMv4qe+
      9q8G9tlv/BKiB5ujAUCzVob9jjfCqDFTo9Y2cmr01PgZAClqfNQItddLjZQa67sOQL5WxGe/
      +Uv4a7/5Dwf2d7/yGeF3eDQAKObOMDP1GqvXPApRb9RhT3rwQeD7OnPu+URjbjIAwt5/ALpY
      jLvwDdt3BvZN258idrz1zgBAvpBPWh/J5859AShdnOH1y+dYWo8pIwAtg5J1OmqF1uo1/M78
      /9AFrR+4ZrvBAAh73wHodDv4r89+T9fIf/xLn8LjlYl3BgDyhXzS+kE+02PX9wKgWa/A57QK
      AKJKw99PbiMai2IjFBUNvINqrTqyAFCjpWfl+0Z3rykG14kBUO2+AFAbaLSbA6P7B/2Ol/7W
      ltF3SQ8GQEN8adEyj8hWSnHgIJmA0+WA1ebCRbGCQrEwkgDQtfqSDvxg6dvS/B9g5zzR+4ZZ
      DIBq9wGgLDrcL/7wq/i5r39+YL/4h19E8iytGP2tLaPv0j4PBkA5nxFzgEmENnfpIxqix88X
      8jg9OxeBuRzZFIgAeLn+MX7n1a8N7Hcnvoi1tL/3DbMYANXuA8B1jZLicFMsHgwAug/w6uUL
      dQ5wRfsbRwAa7Tp2M9tiNNgcGH0u10pDBaBYL+h8IDsrnfSOerUYgFsCQJPgif4kmAFQADgp
      HOJrs7+Lr0z+t4HR5/3M3lAB2NgP4PemfkPnx+vgE8X368QA3BKAarmAxGYcewcnV94HGEcA
      jgsH+P3p39KV0ed0ZneoAJAv5JPWD/KZAVDtLQBwid2tCHyBFYQ3d97pEYAa2GE2jd2TrYGl
      zpKKD3fR2waAGpFjz4tvL380sA8CHyGR2XnrANTFNT+PTunO9b21R8hUcwyAsFsAAOTOjxGN
      xnB4kqGPJr0rANB+153rLnrbAFBF0DVor4muka71bQNQqBevPR4DcEsADvcSmHj1Civhq5f/
      GADVGABZNlIAnOzv4OWL51jeiL/TKRADoBoDIP14KwBUSzlYFhYQT+7TR1RKRVRrdeXF+K5o
      jwyAagyALBspAOhhOK/Hg530sdIo6KX49VAQCwsW0biaKJVLQwWgLCoqWzrXGb1jcFcAaF/j
      8egcDIBqYw9AKZ9FIh5FML6tpEC5s2Mk9/awsb6OSr2FSrUyRAC6iO+HYA1OD8wWnMHxxcGd
      AaB96RjaY9I56FwMAAOAcvECu7u7yOZL9FHpGftGGm4K1EUsHdTts7g+haPc/p0BoH3pGNr9
      6BwMgGpjDwD9Mpzf50Y4oT4LZBQDoBoDIMtGCgB6I8zttCMiAKCH34xiAFRjAGTZiI0AVXhd
      DqxuRFBrmH/oiAFQjQGQZSMFQKNahN0yB/878TAcA0DGAMiyBweAVn2W/UtI7B3QR5MYANUY
      AFk2QgBcIpmIIhIVJ48meARgAAY2NiNAvVZBNptFqVKjj8rypyhDp/fboAyAagyALBspAPS6
      RHpnC9vJJEKhsHIjbLgvxTMAZAyALBsyAMAB/SrEZgLhcBSlag3FUpEBEMYAyLKRBqAhUp5s
      NoPjkzMRmC6nQD1jAGTZSANgFAOgGgMgyxiAXuAYANUYAL3vDAADoBgDILczAMIeCgB65n/v
      dBs7x5sDO8iklIplABgAbdlIAnDTuRgABkBbxgAIYwBkGQPwCWIAVGMAZNlIA1ApFpDLZXF0
      fCICM+wfx2UAyBgAWTZkAC6xEw3B7fXA6XQjV6oO+aV4BoCMAZBlQwaAHo8+wWYijtW1IKqN
      4b8UzwAwANqyoQOgvhDfFUFRf+yVUyDVGABZxpPgXuAYANUYAL3vDAADoBgDILczAMIYAFnG
      AMgyBqB3PAZANQZAljEADIDODwZA+sEAMACm4zEAbwEAWgZtt9+fl+IZAAZAu8+9Acic7MOz
      tIx6s/1evBTPADAA2n3uDcDBbgJWmxMXpep78VI8A8AAaPe5NwD0v8VnMlkRGH4Yrm8MgCzj
      SXAvcAyAagyA3ncGgAFQjAGQ2xkAYQyALGMAZBkD0DseA6AaAyDLGAAGQOcHAyD9YAAYANPx
      GAAGQDEGQJYxALLsjQDotFsolyvKf5jBAKjGAMiykQfgOLUNn38V1UYT5UqZARDGAMiy0Qdg
      fwcutw+FSp0B6BkDIMtGHoBup41arc4pkKaMAZBlPAnuBY4BUI0B0PvOADAAijEAcjsDIIwB
      kGUMgCxjAHrHYwBUYwBkGQPAAOj8YACkHwwAA2A6HgPAACjGAMgyBkCWvREAHdGwd5NJ0YD4
      lci+MQCybOQBOD9OYXp6BhflGgrFAgMgjAGQZSMPQKtZx9HhoWhA78f/FM8AMADafe4NgFYM
      gGoMgCxjAHqBYwBUYwD0vjMADIBiDIDczgAIYwBkGQMgyxiA3vEYANUYAFnGADAAOj8YAOkH
      A8AAmI7HALwFANrNBgqFomgkfCe4bwyALBt5AKrlAkIbQRT5neCBMQCybOQByGdOsBGKosa/
      CjEwBkCWjX4K1GqiUqmKRsIpUN8YAFnGk+Be4BgA1RgAve8MAAOgGAMgtzMAwhgAWcYAyDIG
      oHc8BkA1BkCWMQAMgM4PBkD68WAAtJoN5AsF0Uh4FahvDIAsG3kAjtLbcLk8omE1GYCeMQCy
      bOQBOD9OY8kfQLXRHgDwk9/8jM7uC8A/+NbPmo73vgDwF3/57+DPf+5vDUwLgPaa6Bq1AGjL
      /qkGgL/6hU/rjvfpNwTgquOR0d/aMi0AV8W9D8Bf/81/NLC/8aVPDwD4FwIAbdlPfOVnBwAY
      Y0G+9wHQbqfv9RslfUdbRtffB+C6WJAv5JPWDy0A2n0+6VyfCEC300G93kCz2RSpUB72TTe+
      6/9YZ/aEB8VSAXtHSWztxwa2c7CJi8KFYvS3toy+S//zfOQwju8ZjufY8qJUKuHobF+3z9Z+
      HOe5M2W/u5yL9qVjaMvoHHSu6H4Q9ujCwByxBaRPd3GWO4U7btOV0eeT7DECiQ18feo7+F+T
      fzKw6VWbci66Bu010TXSteaEf69CM7qyH648w0HmEKmTffyfuY90x/vI8RzZfE7xhXzS+kE+
      U9l1xyOjv7Vl9F3y4bq4k++WsBN/ZP1wYH9s+whB0SBz4lxP/BO6su86P1b8vioW5HvmIqPE
      RLudvre2E1Z8p+9oy+j66Xg3xYJ8IZ+0fpDP5Pttz3WrSXCj0UBHAHEp5gNFccDj0zO0O12I
      /dFqtZTt9HPqp8dH2D84QqPVRrutGpVlz44Ri1EjLiifaR/al/6uV8s4OjpCraEeh4DrH48a
      aLlSEd8VnzXnorvUJ+JcxXJV/aw5Fx3vRPjXaKrf1Z7rInuOVFo0/EpN+aw9Vz6fF9fZ+6w5
      l/o/5ZTF9arXT9v7Zdf5TqY9l/Z4hdw54nEB4GlG+Wz0XXu8vu9kZYpFuSLqQb2WwblE75c5
      P0UmeyFGNP3xOm0Rp5NjlKv0M/f6WJREPabSaeSLZd3xhhmLSjGPRDyO9OGxyXdjHUvfu6gI
      H0rkR1v147pY6H3Xx+LWANDBxJ6IrC3BF1gXjbzTK1XVbtbgc9sxO7sges9ib6uqjKD6yaMf
      Yi2209sidbSXgM3hxkWp2tuiqimG3amJl7C6ltBoi3NrVLo4h81qRfr4vLdF6nB3E68nZ3Ca
      1fsgooPoxjJmZmaxmTzobVTVaTWwsuRBZHNHBK63sad6pYiAfwmR+JZI9zqDSidd5/tN5ypd
      nOHVs8dwLYdgONW1x2s367DNTWJ2wY5KXT13XxR3j8sufE+afC/nz0UMX2Fz97C3pa9LJDfD
      oq5msBrdpmodaJixqJcLmJ18gXmbV6Qx+pNdV8cEqM9pwcT0PHKmOL15LO4MQDwYwKLNZaqI
      TqsOt92C5fWIyLv1DbYohkO/z43EnrEigJP9JGbn5k0N9rJLF7oIi8Mrgq0/XqWQhWV+DnFD
      QElnh3vwLS0rT7HqJHyPCngXxfHKtUZvo6qOCJxtfhre5SA62tYgRIFbXFjATvpI6VW0lX6d
      7zedqypSxtXlJYTiO7qGR7r2eKLBhgNuTM3ZUBE9rFYUd5/LJjols+/VYg4+jwfH5xe9LVK7
      myHMWWy4KOob0TBj0axVEFxfwYpoM8Zz3VTHO7F1vHw9g3y51tui6jaxuBMANCyt+92Ymbea
      AKiV8liYnRSB2zCc/FJx+KMPP8J6LNnbpoqGrL2tCCYmJkVuXehtVaUCYIXNbRwBREp1eoCp
      1xOIbqd726SOUwk8efocR+f53hZVbdGzBTx2LNjcysReq64YHpdE4NZFb2jqOQoZzEy+RHBz
      V/ncr/SbfFfO5bZh1mLusamn/MH3P4I7IEYAzbluOh59MSQAmLM4zXEXvah9YRaupTUR997G
      nsj3iRdPB773Rb1oWDTKqblFFMr6jmKYscid7uPRj76PBYfPMALcXMfb0XVMziyYRpvbxOJO
      ADTrFVjFUDw9Z0XZcDGNagmLc9N4NTGDbKHS26qqmD2FddE8nF2Kiljzu/D85QSOMvoGSwAE
      V5cRim2hYwhOSgT72bNniGyletukKHA+rxcnhuNRpUfWA6K3CZvSN6r0gNeJwEbMFLjzozQ8
      bhe2eqPXoNJv8J3Otepz4NnzF9hOnfS2qqqVL5ShvX+8vm46HgGwFVnHykZEST20KpwfYeLl
      czh9q4Y40WiTx4oYbTaT+70tqqjBbsdD8C2voVJr9raqGmYsWo0K3A6bSKmM6dZNdXyJ9E5c
      8Z3mG1rdJhZ3AoAmIKGAR6GvbAhctXQBq6DPKoa6kiH9qJZysFos2D047W2Ropz9+YtXph67
      WSvBabeKEWXNlAIVRR49NfFC0LzX2yJFKZDFsiiGYkMvKgK3Iyp9Xgz7dG9Dq47Isd32RfhX
      w6bRazuyhsePHiHS64n6lU66znfq9Va8DszMWUzpR6tehtO2eGXPdtPx/GJ+5RSjYdVQ6e1G
      FY7FWTFSLpsrXQz7dqvFlHuTDsVINDO/YOqshhkLmm8suR1YD2+aYOvXcchQxwTUxooPi3aX
      KQW6TSzuBAA5vLrsg3cpYMpFCQD74jw8YvgxTmguzg/xVBM4rajHdrncyFyUeltU5cWo4Xba
      4RbnMgJQLV5gdWUZCWPPJgBNika+aHOacttup4WwGAGcbp9pKCbf3S4ndlKHurRE7IXwihcf
      fPvbCIS3lS39SqdzUS/qdLpNk35lIulzYsHqNMFGue2r50/g34iLJqXXdbGg6/V5XLC7vKga
      fKdzRYLrWL0ij84c78OyYEHqyDDyihFgKxaEzekypRHDjAVlDXNiEmz3iB7bEIx6pQCf24nk
      vn7UaIoOxL/khdXuuGIO8OaxuBMA6nDmhNXpQ72pz6Pp5B7HIjxXzAGOUluYnppCJGHusdNb
      ITx9/gqnhsCV8hkEgyHsJHfRNEyqqZIWF+ZMPRs1clohmJqeM+WitAwW8Lng8S2b0rfDvS04
      REAPT7OGRqmmHi9evBQT+CNlS7/SqXXsJsKYnjX3olQWDy5jbtFh6iiyIu+dnZnGclAAYKj0
      62JBjSEYDGJnOymGfUPc6Uakx9Gb+PU2KhK+h1fx8tWEmEiaU6Dgql90Bl7kDB3FMGNREpNq
      y/yM6OTMnWYxd4JnTx4jbljBaolePhTcwPb2NopVfaZxm1jcCQC6mE1xIIfoiYy9KOXsqeQ2
      olfk7BfnJ8qMfiulBk4rWiJdDqwgb+iJmvUq0qk9HB6fmoYzmux4XQ5EDfkhAbDstuIHP3qE
      Q8NQTH4kQitKRRjTiFqlhIP9fWTpPkVvmypKm4KYmpzCTlrtiQaVLnR6kMSimNtclW6dHx8g
      GAqZeuxygYbiBQTj+gUB0nWxoDTiIJ3C/uGRaYWNOp7Q2jK8/nXTRDIZ38D3xYT7qlQxvRNT
      GqyxFx1mLOpiBKBVG/9axDThrpUpZ/fj4CTT26KK6vjocB/p/QM0ruiE3zQWdwNAHIhm4IsO
      D2qGk9cqRezt7iAUiqBluJoLMTl5+ewJNgyrQKSzoxSWlvymobMlJtwekQI5RMpSb2krXUyC
      tmN4PfFajCjmSTBVxGtRScZclG7ihFd9mF2wmeYvN6kqGkQulxM9r7qPttIzx2nMzS0gky8r
      n/uiX9TYFw02HAqaeilKgaZePYdnJSyuRK/rYtFpNbG65FKWn41pRD57gpmp13D5zL2ospQ4
      N4WQYeTtUgoU3cDUzJxpBLhJbzsWzVoZlpnXWHT6TZ1cReTsy/4lkYrpO83+Ysa8xWoabW4T
      izuPAAkxEVpctOHwLNcrVUVLpKViEVW609bb1tdNk+CT9BZeT82aKp1GlIAYztx+cTG6Xu8S
      ubMjLC/5sL17YDoXAbAggmM8Ht3EsYlJusPjN8F7G2kr/eRgF9ZFMaFN7Op6MGpg/Tu3tF6u
      FYHdnwQbfb8uFhT36JpPST2NvtOvd2ysBrAejJoqneK+SCNvL2Xpi9IImuhaxETSdL/kFrpv
      LLoiZelPgo1l1aLoKF5PDNItrdR7GHaUqoZ7LLeIxd1ToNCqmIC4b9WLlvJnmBYXY7ypQblo
      LBjAk6cvcJzRD50EwOqSWwCwipZmEnx52RGNQQxzoqfc3EnpGhFNxmh0oDmAsSeisr2tGOyO
      2/lulLbSz0SlU69nXHK9SZTPz89MYjWyReEc6KZY0BdjG8ti0ioAMMwBjva2xaTVjY1gWMyV
      9JVOI+/05OQgZZG6xHF6R5lI5oqGnP0Wum8s2o0anItzV947OtnfwdPHj69cONkT8415kcoa
      4b1NLO4+Aog5gNsXePNeVDQ8Wn60We0iLTEuCVbg97phEymVsVFedlvYWPGLSveiYUiB8tlz
      7Is8NV/SV56yvh0LIbAaFPmmoZEL37djG3B5l9/aCECVbrU5kDXAdr0usb+7BZvNalrduCkW
      5PuWGHnnF+1iAq8vo9STYnGeyemAonOdHabg8viQK5j9O9jdFLH1mHrR2+h+sVBTPqfdhth2
      SjdqKJ3cRgAL8xbzTUFxXXQfYEbAZkzfbhOLOwLQRcBFz2EsmCbB10lZIouF4XK6zDenRC9/
      cnSAvdS+6aYGXUEhf4F8sWS4mOtFAOyLeUgsnrgSAFrGs7uW3hoAqUQIj588M/fY14oASMDp
      cmLv8Ky3TdWNsRAqFwvIXagvKL2ZLpE5PUQ4HBGNUr+sSmU7ojOYt5p70dvofrEQAIhGSUuu
      tJytz1hEmps5xe7uLgqGBQESzUWyuQtDanyTzLG48whAzwLddiLZFEMdPSmoPNnX20ZSJjQb
      K7DbnebVA9GYt+Jh+PyBew3TfV0K/4MBN15NzpomkreRttJPxTA9OTVtmnDfJJrQHotY5AsE
      tozGjbEQUdtPJuD1LuH0FinG9RIjSnQNz15MIGNctryF7hsLuubTk2NkCWwdAZdihErAarUh
      IeZ5RhE4Ho/3yoch31R3AoAa0d52HPGtpOmW/E3KCvrm6clDMTkx7kdD5+zsvHkSrKzpW3vP
      7ph7xNuKltVmJ19iYmr+jUevqyQrnZb39hEKR0Ua8ea9KD3lSEvC9ESt8bquiwV1PPQsED27
      c58euy96BME6P41nLydvtQpk1H1jURPzIad1QUlLixX9cizdubXMzV75JOu2gPfV5AzODTcM
      31zA/wNoQtOziLzTOQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAACrxSURBVHhe7Z1pbCNbdt/9NUCQDwkM
      fzNgf8sgcQDH9gTxAieYxEHGSZzFcVYgceIsYwQ2JoYNT+IZ2xM79njsN/HYb5Y3M2+6+/X6
      Wju1UlxEkRIpSqTERaJIcRPFfd9Fbf+cU6RapFjVrZZKalG6f+C0WlWlulW37u/ec27duvd7
      Tk5O/uPx8fG3hQm7j/Y9/A+EhO6pBABC91pnAJycgP5PP04kExK6D3oFwG7Ag5GRUSzb7PAF
      w2jU66g3GqjXa2R1NPdb0h+cHB9i0+NGtdH+XUhokPUKAJdVjw8+/Ahrdium5rQYevoMRqMR
      jx8+xIMHDzGsmUXz4AjlXAKPvvshXNsR6QRCQoOsVwBsOa1weALIp2PQ6uYxO6PHbtAHnc4A
      3ZwB2nk9qs0DeFYtBMQDjE7pcXgsXCWhwdYrAJqNmuTmHB0eoFypoFyuoLXfRKVSRYX+X6Ft
      R1Tgq5Uy9lstlMplHItYQWjAdRYECwndQwkAhO61BABC91oCAKF7LQGA0L3WWwFAx3b+J3RV
      cV6KN+7q6CqjF94KgGazeasg4JuWv57bP5xjf38fR0dHnd/ejS5ScG57PrJarRYODw87v72d
      BhiAE+xsbcDu2EAylUIul0Mmm0U2m0Ek5Mfq6ipie0nankUikYBvy4fmweUy6Tr0rgE42K/D
      ZrXC59tEIBiV8imTyaJYLEp5WCxXUa8UYLXZUSyVUMjnkU6nkSFLZ+gn5XU6naJjKc9z+Xf6
      TujeAuC0mbDqcGNWM4LRcQ1Mi4t48ewpxifG8fL5E3z44BE0k5OY0Gik/ZXm7Rm/9K4BSEUD
      ePz4MUZGRzD08UsMD49CQ/k0MjqKly+ew7jkQGDTicdPnmLBqMfQ0DCePnuG0ZERzM1O4cHD
      jzA6Nk7neIBRjRaN1rurXO4pAEAunUAksotIOEQ/o4hEySJhxBNx7NL/Q6EQ1f5JJJJJ7MZi
      2D94ty5Ht941AJVSAalUGsHgDnZ2gohGIpRvSeztxZGI7yGdK6KQyyBFtXyS8o/zMRqN0P49
      xHYj8HpcmKLKxe7cQCyevB8tQKPRkB7cwcGBsCtatVqVKhS5fYNgXOike7gF5aFWq0llU27f
      m0wRgJOTY8RjUaI+ip1gGIdHJ1IifONyJxL2dsYPTVQm6pg0XP+SlYkyAOTqhP2bmJ2bhclk
      Qa5ckwbE3SYXaJD1rl2gu6RrcYFOjo+wGw5ia2sL3s1t7B8eSS2AAEAdCQDU070NggdZAgD1
      JAAYQAkA1JMAYAAlAFBPAoABlABAPQkABlACAPUkABhACQDUkwBgACUAUE8CgAGUAEA9CQAG
      UAIA9aQaAOVCFn6/H8lMvrOlVwIA9SQAUE+qAVApZKDTzsHh8UNucKsAQD0JANSTagC06hXM
      TI7D4d0RAFyzBADqSTUACpk4JsZGsOYJdLb0SgCgngQA6klVF2heO0sACBfouiUAUE+qAbBP
      LtC0RrhANyEBgHpSDYCDZg262Sm4/PJz/wsA1JMAQD2pBkCzVpKC4DVvQPoiLJ/jKS+ySGey
      0kfPAgD1JABQT6oBkE/vQUcxgHs7LH0RFgsHYFowSp9EFqoN6SNoAYA6EgCoJ9UASER3YFo0
      I5akGv+wBfe6A26PG/a1ddT32x8fCwDU0X0CoNaqwxF3YSXm7DFnwo3GQaNz1OWlGgCHB/tI
      JhIoVes8LYT01Tyf+PCw/aCEC6Se7hIA2VoO9r3ews3mTW/jiDyJzYwf/+DDX8CPf/3TPfbp
      B/8GO/lw5yyX10UAaFGFbttZh2HT2mM9AOzXy5id1rRjgM62bgkA1NNdAmBiaxY/8Y2f7Svg
      /2noV1HZr8KT9uGnP/g5/M0/+1SPferb/xyBXKhzlsvrIgAkSxn82Of/Kf7Kf/vhHusBIJfa
      xfOnj2FZ81wrANVmBflKts/q+zVpf7KShi3m6DOuSY5P7gaADECymJFqIf3mco9Zd5xSjaWG
      UqWsbBorwQ0cHB10jrqaRr1T+JE//3t9Bfzfv/jMrQEgUUzjh37zH+Iv/OIneqwHgFo5h6nx
      EZhX3dcGAM827I04od+Y7jN/fEs65unGcF9twvbLY79BPmNTOmbQxQCMrWrxfb/8Y/jLVBN1
      2ye/8M+kgquGXq7M4Hs/86N9afzUF38BuWqxc9TVdBsAyJYLWPDZ+kC3+NdQbzUvBkCrUYPJ
      oL3Sm+B9KqDRTBDhVKDHdjNhHFCtxgC4w2uYd2r6bHvPK53jI+fHfZnF9kvDn71TAAxT4fxL
      v/RDfQ/lb3zu01LrcBEtR+34zuqTPjOGLPQMT/DcOom/+J//el8a7A5kq4XOWa6mmwBgY28T
      7xu/iz8/Z8OOKdQadZi2VvD9v/oTfaB/4jd+BoF05GIANCoFaOdm4QvGOlt6xQB4U9uyGc5+
      YIua1FKtAKNrpq9wm9xa1Mj1EQC0pQYAXMC/tPBV2bz63Ozv4ejkaCAA4DIxt7nQV7jZTAGr
      lMaHS8/xg5/7JH7gnP38N/4LitUSjOTmfe9nfqTvPn/wsz8Nfyp8MQCqpRws5kX4QsoAvHCN
      yd7sf3j5P1Bt1e4NAByLuGJrWNjW9tnuBXo2BABnAHBP0a88+62+ws32hYkvS/d5IwAkd3cw
      MjyMlQ0fFdTOxi4JAM7EAeTDpa/jC2Of7bNFv046JpQNyALiia+jud+8FQDU9itY2jH2XaOF
      tlWa5U5Kr9edAYCD4JnJCdhdBEBnW7cGBQDOsFQx3heHsBWquc5RV9NFANBuamT3P7V9B/Vm
      /Y0AFJslPFkfwrfsH/XYA8dzpKoZ6T6vCkCqHMcfTv9W3zX+wdT/RrzY9gRMEWvfNbDxdtYd
      AYAKTXwXbo8X28HorW4BOEPYBZEzFv9cD67IprGT8EnHvElvSuMmAAgXoviZ7/zLvnz4yW/8
      Y6wnuKv6+gHg5/W7+j+WTYO38/47A0Bo2wOdcQEuX/BWA1BtlLERWoWTCnm3eSJOtGg/F9Kr
      AlBulCgNe18am9ENqY9eAHDnAABK+Qx8vm0ks/LB0W0BgN0Yw8Z0398veubR2K+pAkCukoF+
      Y6rv7y1ePZqthgCA7M4BkNgNSus+OV7zSaQAQABwancOgEw8gvGxMTh4LNAtdoEEAAKAU1MV
      gHo5D938PAKReGdLrwQAAoBuu3MA5DNxmBcX4NxUHg16VwA4pALMBfm8tQ73pf0CgHsIQDGX
      htftphaAbpx+PzxoSYW+Wq3Rjd4tAGLZMMxeXZ95o+vS3wsA7iEAR4cHKBYKqDeoFqRCEPC6
      YFuxwWxZRrm+L30RdlcA4JdicvudQZsAgOxeAsAfxBh1Wqxv7tCNAandMNaca1iy2gkAbgmq
      AgABwCu7cwDwtChLZhNcm34cHB5Ti3AoDdqq1Rt0CXfLBRIACADYegBoNSpYNOjgcG1RMNj/
      uZ4AQADQbXcOgGa9AvOC7rUfxAgABACndscAOEEiFoLT6YAvtEu/9UsAIADotjsHQGTHh42N
      Dbi3b/dgOAGAAODUVHWBjo+O2l/YK0zXIQAQAHTbnQPgTRIACAC6TQDQZQKAMxMAtE0A0GUC
      gDMTALRNAHDOBABtEwCcmQCgywQAbRMAnJkAoMsEAGcmAGibAOCcCQDaJgBomwDgnAkA2iYA
      kJEAQADQbfcCgEatjL14ki6yvUieAEAAcGr3AoBYaFtaJK/SbH8eKQAQAJzavQAgn47Due5G
      8+AQjUYDL10T0mIVf/trvcaFk2+2WM1jwTULnXOqxxbd89KMbrwsEANwfj/bdswrrT/wxDnU
      d362z4z+Our7DWk1GePGTN/fmz06KlhVHB4dEgD2vv1sO3GflEY4GZDdz7O/8d9ny2kJsvP7
      l7wGgqyO/YN9fLT8Ab448et9ZvbrpTTmN6dk9z9feYBao4ZR+yy+jxev+K8/3GNcOBOFNML5
      KP7Rg3/Xlw+f+ta/wHrcIxWcPza937ef7fNzfyhB+rFtGt/73/vT+Mnf/QVkKnkkS3v48szv
      9F3jl6d/G3uFmPS8ft/wFdk0eDvvH/dOy5aJX3z5KyhTpedJ+SSQz+//9Hf/NQLZEA4OD/Br
      L34Hf/XzP9VnX5x8T7rPh8sf4xMy+//tt34ZhUoRC5s2fP+v/HjffX7i138G/mQY8UIKP/pb
      P9e3/40AMOH8MHnBvFKphGhmFxaqJc071h5z7rpRrpRRKpeQzMWRyO71WCqXQKVakT6rzFHt
      dn4/W76YQ6VSQSS723d+to2Yp51GhdLIyqdRpTQ4nWxBPo1CKS+lUSwXZPdnqeDxNZbKRYU0
      kq/SiKSD2KJrOm98/5xGIr8nuz+aDkv5FE3tQbuxiLl1U48tbq7Q9RUpn3KwUWVxPh+WCe5M
      MSul4U/u9O1n24xvS3kVTVMa6/1pWLZWKY0SCpQPvDLP+Wvcjm+iSAWL0/BRZSGXBm/n/TG6
      X/ky4ZKuIU3Pezlk79tvDa0i13ke7ugW1eKWPtuK+aX94XRUdv9acANFKpfxTBI6l6XvPo2e
      ZcrHPJWtvJSv5/e/dRDMMLCOqZaMhHawl8wQJNImad/pfv6ofi8agsvtoQuotjfRga8WhqP9
      vA6xmZdlTZ3N2Ny91tMx1QzhYACJdJYawbb470/TODpsIZmII53JSTEKqycNEn/k4/f76WG2
      1x9jdafB5wgGtpHK5GXT4PWSo6EA3HQf0uqZJN7XnUaNgUymsN9qn5evoTeNA2Sz2VeflrL4
      U9PTc/Ci5JxX0b0EuV/tI3rTOEGaJy52u5HKtpc16k3jBKm9COXlIoK7yc623vs8OT7EbiSI
      WDzVk8bpffLzTCUTSKUzVCN3ruvcfbTIbduhvMwVz6ZNP59GhJ7XXoJnrm6rOw06IeK7XCbc
      dI5KZ9P551VFIpGkVvZsjbTuNI7peeQoLyv0LPhvWT1rhNG25F4UoUgMh510z6eRTycoL11S
      2b00AIfkBizotdjYDFCGSpt6RQXcvbaMyakZhPdSnY29ylMNODr0Mbw7u50tvTogd8agm4Nn
      O/QqQ7t1QNcwMzGEae0CxQZnN9itQjqG2dk5xNPy8522CJD5mUm4toKyaZxQwVizmjA1zefI
      d7b2qpCJQ683UIshv+bWPqWxbFnEhnsTjVZ7YbpuAHhN5uVFPexO7yuQe3UCv2cNk5PkJgbl
      P1aqUIunGRuC3SX/Nd8RxU4Wow5rri2KDfqP4IrAODuB8ck5VHhWEBlVKQ3t7CxCCs/ziGKj
      Bd0s3cemQpk4gcdhlcpEKCZ/jhov6qfTYTchv0baAaWxskw1P7nltc51dgPAFZaDnpfF5kDr
      sAPeOUUDXspLeubewBUAoAtZNi/A7iBfVOZmTygA27BbYFlxkL98RvArUWZkErswGQ3Y6aq1
      uiV9pL9oxNrGFuRu5YSDXZsJepNV8WaL2YQ0251ShrcaVUpjAdshCvg627p1Qn60fWkBKw43
      +dTyaWQTYYwMj1JLJg9Is1aCYX4Om4EI37akHgCOWlizWbBED+1ALjPpynwuOxYsVtSa8qtH
      FsgFsJgW4PVTGp1t3TqimMW+vIhl+zrVjPJpbG2sYGZ+QVoUXU61Ug5G/Tx8BKGcjlpNrCyZ
      4fEFFStF1+oSFc41NDut5XmV80mMDQ8rlwmq9Pi7dadn+1VL1tsCUIzpsMFktlFlI18phrfd
      0BsXqUVvXB6Acj6N6YlRLCyvyQLAF2rWz2CMapSq3EOji9/ZXMezZ8/hC+11NvaqRP725NgI
      zCsbshnKtNsteugXlgmy/ptlQKI7m3j58cfwRxKdrb3i2lk3q8HyKveq9ItdKBPVagtLdkUA
      SrkU9Do9Unn5FVUaVQZgBnZeeaezrRuAerUI3YwGcwaLbBq8gPnqkgFDoxoK+ORXVt8L+fD8
      2TM4eUqbzrZu1cp5zE2OQ0eVhRIAbqqwZgmAakMOMnItojsYefkxXNvyS0BxpWjSz8JotiuU
      iQas1NLNGy1UOOUBqFcKMHILkJRfyIQrRcuCDmar81Ua3QDsU4W2SOVOM6uXTeOIKjT2TF68
      HJGe1+UBoIc+OTFGBccl3wKQP+iwLmJ8XIOAQuErkutgMBgpgJF3T3i/ZnwUK+QaKAHgXV+F
      e9P/yt/rEUEW9LkwOjqG4GtagA3nGjWH8q4DuydcO6+ue3AoWzu3W5mZqWm6D3kXKBMPEyA6
      bPrDsgDw4oSzUxMdyPrTYJC9ThsmJibg9p2do1tS7WwwIKLgnrBrMa0Zp4LjkAeA8irgXYfD
      5ZWdEYS1F96mvBzFpoLLym6Wx+WEY51cObkk6Hl5HCuw2p2yFRZLAnVmmtysdGdLrzivDXod
      1t2+V2WiGwB+nvq5SQmyplwL0Kl4OS/t61uXB4BreItJj0WFFqDFpBrnqUYxoFA+C0C7Vc6n
      ME2+mJJ7wrQvGrVYsrtkXaBmrQyDdoZqHCv2FR4aZ9gUPfjtsPyEv+00KEMVVsfnh7btcWJh
      kdOQuwp2gaLQauep1pL3W0ME4ZOPHsFGGX6axvkYwL5Mrhy1ZPItQFNyw6ZmtEjnSp2tvWpU
      C5ibnsSWYuHch81ipLxakQVAarEN85g3LJKbJe8CVQmiuekJbGzJL216dMhpkLvo9Ci4QCcI
      +70wkPuhlAaXCd28FjtR+UozEfHj2ZOPYFxakwWAnxe7WbM6duX6WwDuWNlYXYZmcgYxijOu
      0AIkMUcBEc8hJHezx9TUcDAypzMpNHcnSMWCGPr4JQJReX/vkJrMJZMB6wrTtLDrsWQxY5l9
      SoUahY+xr9gQVoCskN7DPBVev0IMIMUIdA0W65psnMGxTmBzg3xrB+oK/nnA48CjBw9gpeDw
      NI3zLYBOOwfb6gYOZDJTaumoBZie1UlTVMopT/cxOvRS0T1pQ7aIlTW3bKBdK+VhXbLAvGRV
      cIHatfOqfQV+hRigWsxAT/GWVyEGaINsIv/cKls4GZDdnS26hhVUavJrwe0GN/H44QMYLGcV
      b08L0KxKnTMW66psmeDWlFuAyalZZIu1q7UAZqnm9CvQfgwPPTSDaUkRgAT5lFqtFv6wfAzA
      E3XNaMbgUJqniPzzYDCERCJF7ol87VwpZjE/N0utjHyTGtmm2vnJE9jYzeps6xb7tbalRVg5
      mJcB4JhqPafdCsuSDRWFwsn3OaUh94UK5+l9nG8BVrjm5A4F2cwEdsg9mdebFNPIJWNSzenm
      5a0627rF7oleinXYZe0/gv3zYDCIeDyBlkJl0o5l5rClAEBqN0C18xOY2CuQuQ+uFJ0rS1ha
      tsu2AG3Q7TAtWijWaXc5n1c2uUvupobiqbOK93wLsG5fIldPvsJi7Qa3oJ3XI1e6AgBcMKz0
      0OxKzR09hlIhC9+WT75XgR4C911PjI0qtwCtJjY9bgTD8rUzBzxetws+f1AhQD2R3mTr5uao
      SZVPI5eKUWD3HEtrdB+dbd3iWGZteQFa4xJacmnQfdSrVRSLJSo4cqADUWr2p6dnenqaugE4
      eWMvENWu5SK2fT4CQK5mbN/nFFUWii0AFb7tTQ+2A2FFALa8bmxubSv30BQyMOi08PgjnS29
      qhTSmBh5CYNCEMx5tem0YkrLb9Pl02jUa5SXRex3uovPi5fynZmehmtrRxYA7gXycC+Qxabo
      FfD4Nj/lZeEqAHCXF0fjXKPI+ZT75Ftv+7awvr6h2K3G/ecTY2OK/jm/a7BaTIouEPddr1Lh
      nDdQwKPQ3IV8bqnwKQXiHKssm41YpRpFLg1uZWzkfxtMy4o1ypt0dNSeY7V7upmeFoAK5yrF
      ACYKguUCUK4Idvw+ONfXUVZwDarFHAW5Y+SfBztbenUazEvd1jLPS/Kd15YxQ4WzUpfvBdoL
      bVNeTsOjABm3MqtWM5ZW1mUBYMgcKxYpzlAqE28ST93DeXdwWuBJPS0APXPu5dEtWGTT4JeS
      oR0/nE4ntQDVKwBAN+tctUkzR8v1TZ++RTx9yHLigId7T8IKET8HqPMzmnYvUGdbt/ihOSjD
      rew7y9TOvD8eDcGxtoZoXD4NdrN0s1NwKkDGfq9eO0tprCu0MpdTbwtwAM/6KswWq9Q33SfK
      S56omAGSu0YWB8HamSn4gvKr/LOrZtLNYHFZuReI44xFck9kXVban9qLwulYww65rHLXcXTA
      3aAUy3CcIXPAPuW1ifxzM6WhVDtfRucB8JO7yG5UtvO2uVf8Vpjyko7nMnolF4jnEbUqdINe
      RBy4zc3MKHZ5ce/KxOiI5O/RtfaJA9D1FTPRviSboZLPaVvCotmCkEKvAr/P4ALOvSdyt8EQ
      cZDLTapSL9BldL4FWKFWZnF59dKQ8ZtgHcU6WwoAlLJJ6b3Nos0pH2dQBm+t84swo0KFdgyv
      Y4UKlhm+nahsXnEfPgeg3KMmlwSnEaEgd8FkUewFuox6Y4BjbFAMoBx79uqKAOixoRQEv0Fc
      sLzrduh0BmQUSI1SZhn0eml8i3x+HiG47ZF6geS7QU/I3yP/vFSSfxtN4pdtiwsmaRiDbBpU
      W6zyG1SFVuay6gOgE0/Jv6R6k06kWm9+Xoc9heEavALogkFPoEcVY7bdoA+WZZti4Ww22D8v
      odk1TqdbNQLAvGBELJnlst4v7hhxWKVW5tpaAAkAizQU4iIV1qUB4HE6k2MU8FhWL9cCUGbs
      hgJSjJBXeE9Qr5QQjUaRK5RkCyfnciGfRTZfoFrtcoWzXm2nUSB/UE5SEGxdlDL02gAg90Q3
      PYYZnfmSaZxQAQ9j3bmu+J6AB5nt0n2ms3n5wknnKBfzyGRzrwbDva1O01B+Xm0AFsxWxUD7
      MuoF4AgW/TTGpuavvwXgGGBtQ2Hg0wW0Txnm396mh1agc/SfpJjhcTxarCrFAJSh224HFsl3
      zhbkhyFcVdLYE/0sJqZ1qtZavQC04KYYgN8DXK4FaAeYAf82kuksPaP+c5yO41kmkOXTOEGY
      WlP2nRMZ+VbkquJOixWzHiMT04rvGi6j8wDwi0ul9wDndWkAuAvS7dpAJJaQp/2NOpG+NuNe
      BbdvR7Yf/zTOUH5L2+6inFV82XZ1caA+NTFGccayfDfoJdUNAPfybHlcFFzuUmt6udxM70Uw
      M03BvHtLth9fetdAcYbNIf8ijJsFr2MZkzPzii/brip+4aed1mBGa1T1eXUDwJD5tzzwBUIX
      ak0vDUAs5IfHuyXVOJd6ZFR7B7dcePzoIdz+aGdjr/itHg+Hlvp8O9u6Jb2FpXM4Nryquifd
      KhfS0M5OX6sLlN4Lw+X2Yi9xNlb/7dTuonz6+BFsXQPuuiUNh6bKxM7jdBRaAI65VtbWqea8
      nsqkUS3COD8L4yK5QNcUAxTScWxsuBGNxS/Uml4agFw6Qf5kDvVG83IAkPKpXUxNTiKs0EXJ
      3aCG+WmYbbx0aWdjl9gF4pcer3vrd1UdtvaRy+VQKvP3zJ2NKqgbgFI+I32IIn0wc8k0+CXU
      9KQGvpB8LxCPBVpamJeGjiu5QAGv88K9J5cR98Hn8zkUS+VLgi6vbgCqpTwSyRR4ad+LpHFp
      ANQQD1TjbtBIPNPZ0iv+SqlYyFGQq9BDQ/4eD2xaWnGq6p7chLoBUEP1co5aKn7bLD+shPOq
      VCwgk8nJViZMns+1JnX3XhcA16VuAN5W7xwAHu68qdR3nUthwWiEdzso6wI1aiVMjrwkv1Wn
      +Ib0tkptADjInZkcx5pHPl7iF3pmkxHrFCPIuUAc7GsnRzE6MYNs5xPWQdFgAkDui/TGzmRG
      TOHjB163mPuulV68cAvhsJkpkFb+TO+2Sl0AThDxe7FgMiGo8MKPOxQsJoO0BK5soN1xJ3nY
      iNJLwduqgW0BeIDXlterOPKPxwJZFvSKIxzrlaI0wnFyznDpsSXvSqq7QFUe4LWJTF7+PcDp
      iFPutpZrAbhXz2yYw6hmZuBa0wFtAajWCmxiSqOBX6nWIgBmxoexaJP/JJIfGo/V9/pDFNip
      B+ZNSO0WgIdccxDcPeS6W/yyzTA7Aa1xWTYI5vcI/L3AuscnOyDvNmtgAfC5VjEyMvraj+L1
      c9PSB9ByD5VHnG55PQhFYwpde7dXagPAH3qPDI9IQ5XlcoJ7gRYN2vbYLTkAWk2pBQkEIzi4
      ph6169KAukAnyCZjmJoYh2tbfnw5j9TkWSO2FdYtHmSp7QJxh8HctAYrXZ9ddovfA/AMG56t
      nUu/bLutGtggmD/C1mgmXzscmr/5XXPJv9wZZKndAvCnhJoJzWuHQ/M32ssrlx9ucVs1sC5Q
      lGKASYoBdnble3A4BtBOjcFidwkAXiuOAYKYnpqENyD/Vp2DYNP8FHQm28C5i2/SwLYAoW0v
      rDY7Mgrz6bRjgCmsOOQHww2y1AaAh6YsW22Ip+W7lNsxwJw0i4doAc70DmOAtk7nd5QTP7T1
      Vav0sbgA4M16XV7yNwebG6uwCAB69M4BeJ14WpRF/ZzixFiDrOsA4HViF8hmNogW4JxuNQCt
      ehnzs9PSXJN3rPzfOAA8ca1RN9ueHFcA8Eq3GwCKAexWC1xbAeECXVE8vyi7k6uKw6EHV3cW
      AH5PYNTrEIjIj3AcZN00APyeYNGob081f8ea0xsDgB/aTQLAiyGUSwXkiwrfmA6wbhoA/nai
      Wikhly8IALr0VgDcZOG/6+Iem9f12ghdXFfJy7cCQEjorkkAIHSvdQZApxl5Y3Pymv1Kf8sf
      rjTJ5726TqTVKl93eSy+hhYdJyT0Jr0CYDfglVb/WLatwhcMo1Gvo95ooF6vkdVfzQYW9bsx
      PDSC4LnxO9I8ntMT0BoWUa62//aAgpNatSqtE2BadqBWq0kFk8/Naw53n7u130SjuU8FnP6G
      juN5MBuNevt4+smTNfFaWsvGRWRLVem4er0hzZnJ5+AgiH9yYFnMJWFYNEsvfA4O9qUP96Vr
      ofNedgItobupVwC4rHp88J1HWLNbMTWnxdDTZzAajXj88CEePHiIYc2sNJXF+tI8/t9X/hQL
      NhfVtMcIB/zS0p3Nah4Pv/1NfPTkCT5+8Qxf/+a3oRkbxciYBt/54H3MzOsw9PIFJqdn8PwJ
      n9uAjx4+kM49OjkHq1mP7370TFql5Mnjp5iZncPI6BjMZhO+9c2vY3LeTIW5geFHj/Ds4xFY
      LIv41re+g2WrBS9HxrBk0uH9r30Ns1odPn7+BA9fjGC/2YRBO4mh4VFpeaCnT55i3Se/uonQ
      /dQrALacVjg8AeTTMWh185id0UtzRfLcnbo5g7SgQLV5AI/dhIdUaLWmFWnaiXw2g0qtgf1a
      AeOjI4jtxQme7+JrH3yIyfEJ+MNx2CwG2O0rVBCHMDQ0hKlpAyL+zVfnnp2ZwbPHD/Anf/pn
      mJmcgn1lBU+ePpbgMehm8ZX33sOsyUYANDEzMiKd4/FHD/GHX/ojGM0WAuoxXjx9hK989X1o
      pibx4vlzvByfluay1IyPYHhkGCPUavE1LDs90o0LCbFeAcCFhV0RnrulXKmgXK5IbkmlUkWF
      /s+rdfOUe7y4wO5u7NUarafiaTfK5bLkn9fKRcQTSel3XuigVq1I/d7JZFyaX6dcrvacm4/L
      ZdLS35SKJcmV4W28CDbPIZNM7KHEC13TyQsEXCKZpuPyBNse8vm8tLAyr96+R7/X6G8T8Zg0
      3SLHApVSAck0QUrn4/Py3DtCQqc6C4KFhO6hBABC91oCAKF7LQGA0L2WAEDoXuutAKBjO/8T
      uqo4L5XeqAu9nZRGIFxEbwXATX8P8CbxTctfz+Uz5KZ008Oh5XSRgnPb85F1Zz+Ieb1OsLPl
      gt2xgWQqJc3hn8lmkc1mEAkFsLq6hthekrZnkUgk4PP5rm3hh8voXQPAs0HbbFZpLedAMCrl
      UyaTlRap5jwslqvSii4226q0yGAhn0c6nUaGLJ2hn5TX6XSKjqU8z+UvNBf/deneAuC0mQgA
      F2Y1Ixgd18C0uIgXz55ifGIcL58/wYcPHkEzOYkJjUbaX5FZ/vNd6V0DkIoG8PjxY4yMjmDo
      45cYHh6FhvJpZHQUL188h3HJgcCmE4+fPMWCUY+hoWE8ffYMoyMjmJudwoOHH2F0bJzO8QCj
      Gu07XVPgngLQXqUmEtlFJByin1FEomSRMOKJuLRaYSgUkt4SJ5JJ7MZi2FdxWZ6r6l0DwG/I
      U6k0gsEd7OwEEY1EpDfxe3txJOJ7SOeKKOR45ZoUkpR/nI/RaER62x7bjcDrcUmr+9idG4jF
      k3ezBTg8aNGDakkjNw/IfahWq9KD4yHJwq5mPDKVKxS5fYNgXOi4PPAwd7n9N2mcl+0yKr//
      dfZaAFKxEExmMyxmCxLZgnTDfONyJxL2dsYPTVQm6pg0pP6SlclrAcin96QVWhYXLUjly7fO
      BRpkvWsX6C7p2lwgHiFaoVq/VCqBF6AQAKgnAYB6urdB8CBLAKCeBAADKAGAehIADKAEAOpJ
      ADCAEgCoJwHAAEoAoJ4EAAMoAYB6EgAMoAQA6kkAMIASAKgnAcAASgCgngQAAygBgHq6FgBO
      qKDnc1nkC3lpUQUe7ioAUE8CAPV0PQAcHSKy48fy8hJsq+uoN9uTywoA1JEAQD1dCwBHh/tw
      OR3wBwJwrrtQEwCoKgGAerqeGIBcHj7xAZ349OTCBVJPAgD1dD0AyEgAoJ4EAOpJADCAEgCo
      JwHAAEoAoJ4EAAMoAYB6EgAMoAQA6klVAHh6F6VCLgBQTwIA9aQaADwH0FYwBsdmtG8JJJYA
      QD0JANSTagB4/GF88auPMTq/hmq92dl6JgGAehIAqCdVAOBZgG0ODx6NzEurRcrNdCcAUE8C
      APWkDgBk1VqDTsYrscvP8ygAUE8CAPWkmgtUzmekacTj6VxnS68EAOpJAKCeVAOgWsxCp50l
      F8iPY3o4sWgYgUAAPv8ODo7EzHBqSgCgnlQDYL9ewbRmHGveHSroBEB4BxazCSaTBblyrbNY
      9t0AoFgrIJwK9FmqGFd0AdWUAEA9qQZAIR3HxNgI1igIPjpswef1IBgMtluAw2NpCuq7AgAX
      9nmnps+cQRuOT67/HgUA6ulaXCC5OvAuuUACgLsjVV2gmclxOMgFEgBcXflqFqGkv8/YzeK8
      FACoI9UAOGjWoJudgtsf6WzplQDg7RRIbMmmsRGy3ysAjo4PUWoUUWwUeqxM244o1ryqVAOg
      WS1hmlqANW9AtAAqSADQVrIcx/uGL+M97f/psW8Y30O2mu4cdXmpBgCvCKOfnxMtgABAVe0V
      o/i/U/8LXxj7bI99afrzSJUTnaMuL9UASER3YFo0YzeZ7Wzp1SAB0DrcR7PV6LPDowNpvwDg
      5jQwAPCqkMlEAqVqvbOlV4MCABfgzegGzF5dn0XSQekYAcDNaWAA2K+VMTM1Ib0HUIoBitU8
      gsntPovndm8NHFyA14MrsoVvJ+GTjhkEAOqtGiwBAwy+mR4z+ecpqCx0jrr9ug0AVPdr+O7S
      C3xl/oMe6wEgl4zi2eNHsKx5FAHYTYdkH6rdbyH34nIUqq27AgAHiH8084W+gvP7k7+JaD7U
      Oer26zYAkCpn8Hf/5OfxA5/7ZI/1AFAv5zGjGYV51S0AUEECgLYGBoBWo4oFvZZcIOU3wbcB
      gEarjlDK3+eGRcm/Pzhs3SsAtlOb0G9N95k3vn6hMU2tg32Ki3b68jJC+bN/0JTOsZV0y6bB
      23l/ohSTXLPz++2RJanTYWAAaFQKmNfOYTu819nSq9sCQKGag2Fjuu8aFj3zaJCvd58AmHQN
      9+1ne7n6SLqP1lELxXoehXNWbpakwlttlLHgnuu7xgXXLCr19jFjzueyafB23r8WteK3x/9n
      3/5vLLyH5kHjRgCoNeuUTgK7hXiPxUspqVxeCIBqKYclyyJ8wZh0Y6nEHqLRCALBCI6O27ND
      CwAurtsAwFbSg69ofw9/MvfFHnu0/E00Dup3BoDV8Ab+/nv/Cj/xpX/SYz/3/i9iNx+/GADJ
      3R0MDw1hZWNLujH/phuOdSestlWUqg1pOPRNAFCq5aWCet6kniZ6qAKAiwPg2nPgd8Z/rW8/
      v5nlXqZBASCWj0C3NdVnq5FlNKj2XwrY8dd+++/0FfC/9Qc/i1A2ejEAOAienaLC7NqWYoBy
      MY9kMoFQKILW4ZE0HPomAIhmgrJprAWWpbEjtwWAffKfOR45b6cv2wQA6gFgDZr6/p7t24tf
      pXuoqAEAuTzxKNxeL7ZDUbqx9tZu3ZQLNAgA8AdDnohD9mXbXrY9lEQAMGAAhP0e6IwLcPuC
      AoA3iAFw7FhlzxFJ7UjHvAmAUq1I17MtXVO3RTMhKS8FAGe6AQDI9+58FJ/MyL9lFACcSQ0A
      Erk96Nan+vYvbRol90oAcKYbASBBQfCkZgJrbn9nS68EAGcSANxBADKJKCbGx+HcbD/A8xIA
      nEkAcAcBqJVymNdq4b/mF2H89pEL6nnjt7gsAYAA4LxuBIBCJiG9CHNuKo8GvSoAnGG+mEsq
      rOctmGy7XgIAAcB53QgAxVwaXo8bO9HrawE4w9zhNdlzbO95pWMEAPcLAKlM0HVqNzV95kt6
      pPu8EQCODg9QLBRQa/TPDM0SAJxJAKAeAHydfL3n97Px/bFuBID9ehmG+TmsUxB8nS6QAEAA
      wHbrAOBpUZbNJmxsblNA2v+WUgBwJgHAHQSgRScy6eex5tqUxv6clwDgTAKAOwhAs1aBZUEP
      h9cv3Vg6HkMoFITHu0VAtGeHFgC0JQC4cwCcIL4bxPr6OnxBHgx3grDPC/OSGabFpVezQwsA
      2hIA3AUAPon/DyYzSkOcLt95AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='FirmA Est' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 13' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 3' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAAAXNSR0IArs4c6QAAAARnQU1B
      AACxjwv8YQUAAAAJcEhZcwAADsIAAA7CARUoSoAAACjaSURBVHhe7Z3pc2vJed79F7hc/uJy
      VSoqOU5kuVQjyUlk2S6XvyippCTFJcla8imxkyo7dtlSJEszlqWZubE1mamSHUkeae5IY83c
      nbzc9xUgCO4ECS4gQOzEvu/7yif9NkAOAeISBLEQ5O3nVl+SOAfnPKe7f6f7Pd3nnF84Pj7+
      42Kx+M8iifQ8pl+g/yAk9JxKACD0XOsMAMdg3aFyKn1STyfrCwndVJ0CYDeqMTI8gvXNLRya
      jpBOpZBKp5FKJVlKIZ3JIpdOQKU+RL54jHw2BenMBOZlSwhGokgmEziysO9l83zDQkI3QacA
      qDak+NnP72NbsY6J2TkM9PRiQSbD4wcPcP/efQyOTUOn2cO7796Dwx9BNhnBu2+/icW1bUim
      RzEnleHuWz+Gwe7lGxYSugk6BUC7u4ZtlQ4hrx0zknlMT87DZtZhbk6K+WkJZmdmMDLYzwB4
      F/LNfWRTUfQ+fA/ytU0sL8xiaHQcA/1PYXEH+IaFhG6CTgFIJ+Osy5NFIZ9DJBpFhHVrspk0
      otEYopEY+zuMYCjEPssgEoujWCzA43LAZrfD7XLBH2TL/T5E40m+YSGhm6AzQbCQ0PMnAcAt
      krgi17gEAF0mn8sOp9ePMOtuUgqFI4jFoggG2e/BIMLhEOuKhpFIJFAoFnnXNcS6qOlEDLs7
      O3B5vAix5aFQEEaDHh6fn/0eQiKVLu9B6KwEAF2kYiGH7fVlzEsXsLa2BvmiHCurK5DMTWN+
      gX0+M4nxiUkotpTYUGwhnS3Ay4AJRFj8lohAsb6GmakJDA+PYnFpla8/MzfHvjMOuztY3ovQ
      WQkAukjFfI6d6YPwul04OrLAarXAZrPBoNfB6fLAbDKyz80wm03QGy18wDIRjyFXKCKXTcNq
      scBut8Fqs8NmtbLvWvn6FqsNqUyuvBehs7oSAN3W1+z2vm+r/bEyQ4FV+lbpecu/s2oYAMr8
      TCZT/utyogN41kE0e3CN+rnM7lqZ3VfJr06q8fxrX2WspVbl37PqYPsBYDs1avag3DuAlwVk
      4XAYAdbMU1NvPTJhW6mEx+vjgZrX64Fer0cmd/mzWyN+UvEw7z/rDtWwubzMQ4AHjNFoBIGA
      H4lkGtGgB9u7KvYZjYXQ5wH4/X7+k4JPv8/HvYdZ4HmZqtBUAR4XoT3YhcXh5n5CzG8gEGR+
      Sp4o0PWVvWWuOAWlEX9hnxOLskXozRZ4PS7o9EYEuA8WmLM8ofxz28040Bq5X17Wp/lH64Xh
      o/xjn8USlxsvair/yjou5qHaUUCxvcfrYISXN+VloDMAbC0vYIsBMDU6iPGpGRbcydDz+AlG
      x8bQ8+QBHjx4jLGJCUyOD2NwZBLx9OULsxE/psNdPHz0GMOD/ejv78Pw2Dgmp6YwMjTI/DyG
      QqWDamsFj588ZQEk+5z768HA0DDmpsbx4EkvxkdH8PD+PUxJllnfuz4CzRQgjbYP9/VgfJoF
      smMj6O/twdO+AczOS9HX8xh9A/3sZw8ePHoC0xWnoDTiz3WkZXk1zPLwAXrYfvsGBjE9PY3B
      vl787GfvYPtAjxXJFPqGRjE7PcmC8SH09vSycmZlOzaERz1P2WeDuPfee1hWqKhq1FUz+Xei
      40IWC7NTkEoXMMXKe3hkGFOT4xgYmehMF8jrtMHMAjSTkYI4CwvizDCy3+12Bw/oDAb2u8MB
      p8POlltZC1Aof7O+GvET9Hngcjmh0x5Cz/ZpMpngcrt5oGm1mBEIR3kA6nK5eDDpZD9pHStb
      bjEbsbujxBgDYGtnDw63t+0FmE0nuRcHyxsrC2odLKg1s/xzOp041KixtDCHyel5aNmZOJG6
      2j4a8ZeMhVne6WBiZWZiZWhlwTXlD+WVTqdHiOWfi3mjxPOP/TSbzLycTQYdFJvr/KSyp1LD
      G4iUt3qxmsm/U7GW1OfzIpNO44h5t7J8pLpotTuvBkAymUQul+uKRJlD18RrLWt1ymYziMVi
      bJ/ZmstrpXb6SyUTiLOuRK1ll02dzD+qgJR/2Wx35B8lAUCbk/DXXOpKAMhUK1VgRtLxGE+5
      TGMjlu3w00oJf82p3f66AgCjYg0PXvoq7r/4V1jte1zzctVZZYvHCOcLCLNYIZ7LiwrWhAQA
      XQCASjqLf/jyZ/D9L30a02/9oC4AU/4o/uOWFp9SaPGG0cnvXLtI2UIWkUyEp1Q+Vf60MxIA
      NKcbCcAx+1dkkTcl+r2eGgXgsSuIX13Ywa9Id/CXB0d1AZDapPjy2JfxxbEv4ie7P+G+LhTb
      /8nAST0v9SQAaE43EoBt7zZeXnkZ313+LoYMQ3UrUbsBGDQM4oV7L+Aj732Ee6oHgOPwADNv
      /ZB7US3MNgWBAKA5dSUAh44gnirs6FXYsHkUPHeOb7TCdRsA1X6KLNYopvIoJvM4zl5+jIIk
      AGhOHQUgk0rAZrXA5fbyuea1RIYeLBnwr/5mEh98aQLf6t9jFaqywt42AJIHfnh+pOQpOmeh
      Pt6lJQBoTh0FgEb6VpflUKq0fLYhVcSziUSG7jMAqPJ/4MVxfLOvPgCFTBqFSISnYup8ENrt
      AMQ3XbC/JIf9RTlCfToBQAdV018hC6RCpZRt7h70CgCyqTjk0nnsac0oFvI4MuqgUqmwpVBg
      a2sLNreftwyNAhCdn4P5C38E8+c+D/+bb9JRldcsSQBwfbqR/rQTwNt/ANz9fWDh/7LyuLg8
      L1IFAOlEBDKpFDqzg22zAKtJj42NdSzMTWNmVgKVzoxEMon3FnUNARDq74Pmw78JzYd+A65v
      f7thAHK5EGKxA57SacetA8AStfCLBeRz27PNNt/ADprUjQRA+QB49ZeAV34RGP7z1gGQTcWw
      KJ2D8kDPWwCL2cQnhFksdHeSFeFYghtqtAVoFgC3ZxjypX+LRflvQae7wwDw3yoAqPJ/7P7H
      uMeXl1+u66+VEgBUxQBrK3KoDdbyJ+dVGwBm4DQdtxwAp+spJNJfx7zk16DRvHjrAGjUXysl
      ADgDgF6lwN27b0Gyoix/cl41AbCsACN/UTLDzA3qB54rAIpFmt0YYSmMQqEyKBMANKeOAuC0
      6DE+NspvbHiWagKwfb/C0KC+v7sBYPEN90CJ7SudyMFni8FnjSEWTDcMgM8/h03FH2Jj87Mw
      m3/ENvn+8dUswICRFeLDUkFaV5m/yhOGAOB9dRSAI90+ent7saW63QAkFJtw/e13uJfIwAB0
      6268840lvPN1OeQ9OuxLGgOg2l9dAKjy3/nlUp6xlrM6vxoFIO9PsWPy8JQ5utyNJicSAJwB
      wOM4wtTEOHY1xmd2c28DANV+NEsO/PjPpHjzTyWQ3NN0AIDKAmwUgJDLyadoUL45DtWs4rth
      /xvmj3kM9bc+RrlOdRQAp8UAmUyGPbUW2XztIX8BwPUDoFqYwz9+5bPc48zdH9b1d5EEAGcA
      yKZTcLtdCIajbW0BCtk8MqzfTX3vXKYgAGgUgKr8qvYX8AegVCp5osvXF4n8uUMxHDijUDki
      cISbny6eisXgNRt5ivrP36xPdxTSvc6U6MkbF6mjAIS8DkyyLhCNA7QTALPSi6ffU6D3e5vY
      HDOfq3CNAqC2Byon5+VZhp0ZKn/eAFBuK3Hnzh28+uqrGBkZOZefZ0X+etZM+PidWXz0zgxe
      GTlg+3/2+peRZmkBP/4f/xVv/slXIPn53XP739vbwxtvvIHXX38dk5OTdf11rgVIxTA3PYHt
      A0NbAahX4RoF4N6SvnJy3uF4xVB5s346DUAuFERareYp53Qi7ElCs+LiyWUIXwoAqvyvvPIK
      hoeHkc0GK0bSz6pmeSYCgGu3lCK28ppnROXDvsdTjcpbr0Wnlumsv04DcLaFqgQgGcOKXIYd
      zc0C4D0GQDv9VFewAouP6L1plOgJB60GIDw6At0nfwe6T/w2PH/3d9AsO/CT/8XOqsyj9H59
      f9UAuNxDFSPp1f7OleduD/DGB4HXPwBM/vW5Cpbc2qq4isY2WF5SUqMAFAqZxsZR6gBwzMrk
      osmXZ1uoCgBi4SAMei3MNlf5k/PqBADV8++7DQDtoRZvv/027t69i4WFBTicvRcCcO7+iToA
      NOuvGoB6/uqVpyVirpirFO7vr/DHNlLeWkmNAuD1zTY2jlIHgNi85NKTL88AcAybWc8fTajW
      m5iJ0qfV6gQA1fPvnc7uAqBeBcsUChU37Z+7f+Ka/TUKwJB+oGKuUrW/ZgGo9hdkZ/D9eAr7
      sRSsyXTDAIT7By7tr6IFoJct0CO2Ixe856sTAFQX6E0DYMofrrhpv9v8VVewZsuzHgDVLXo9
      APo9AXx4eR8fWtrHi4fW81f5qgBopoWqAMDntEAqlWLv0HitLcBNB6Db/VVXsGb91QOgukVv
      NP/qAdBMC1UBAL0Ie1E6j32tmQfBmXQKiUQcwUDpac7JdFYAcAsAaLW/euM6zfpzBqOV4xQN
      xlAEAHXDSukCADKJKKbGR6DY17IVizCo97G+uclviJmdk0BtsCDDms978s4WqACgu/3VG9dp
      1t/jNWPlOEWD/ly6EKT3D3ne0aXks/4qAAh6bBgdHsKWSsdJ8bvsUKkPsLq8hOWVVRhtLgGA
      AOBW+asMghMR/hz8NaWad4Gou5PP06MHs/zJyHSjvOgCiQp2awHIpZNYlUtPW4BaEgCICnZr
      AUjHQ5idnoKm0VsiBQDC320AIOJ3Y3J8DNttviFGACD8dSUAHrsJA+zL6zsa0QUSFez5AyAV
      C0EyO12KAcqfVUsAICrYLQXgGC67GftqNbTlt5DXkgBAVLBbC4DNdAiZfAlq/ZEAQFSw5w0A
      hgCr9VTBL7ojSAAgKtitBeAyEgCICiYAEACICiYAEACICiYAEACICnb7AaB3BditFgQjcQGA
      qGDPHwC5dBzrK8s40B/VfkOMAED4u80AFAs5aNUqOLwB5PJ5PF4x4IVXpvGRl6fwncF95JWP
      UXztX7L0L1AY+zpG9EP43Ue/i08+/CT+fvXvERwahOYTn4Dm3/17OO/cgWbFjp9+TYa3v7qA
      hUcaqBbm8U///Uv40X/7Imbf+TGiCidsryzD9vIygoM6OBwDWJB9HNKFj7IMehlPnT58aHEX
      /1q2i2+qj/BwRd9RPzvKHbz22ms8jY2Nwe7oF/5uqL9LxwAnYwT0LByrO4AtkxcKkwcGVxBx
      rxVp8wZL60i5dbAH7FA6lNh2bMPkNyFityOsVCK8vY2o0Qi/JwS73s+T1xGCz+WC9fAAVs0B
      PDYrot4QYiY/T3FXGKGQHT7/Nktb7HcjbKEwFP4QNlnShyId9+Pz+nBkNsPMktvtZp5swt8N
      9XelIJgeUxHwOqHR6pHK5FAoFOB1WqFUbsPi8PDXre4pNyFbWkE0kebLz66fz+fgctphsztO
      v1+9Pb/bwf+m+5D5cp8bLo+PtUAF/nc8GoaHZWSKLb8OP2e3z9cX/m6kv6sBkE7DeLiLOakc
      sWTpmS1HehUmJiZwYLDy1sKg2cHQyDgCkQRffnZ9Cqo3lubRNzRWczlNyzAe7mFmXsYPiGQx
      qCFdLB0gyWbQYGl5FUd2N9LX4Kd6+8LfzfR3ZQCO9GpIFhYRitEzhOgAd7GwtMZ3WMhnoT1g
      O5DIEI7Ro+mOq9ZnFVp/gMnpeUTLGVS9PcoQ2dIq4uUDNqiVGJ2cRYRnEFtfp8KsZBHBaOIa
      /FRunyT83Ux/VwIgEY9CubHEiBplBpPcwO7mMnr6huANxvjfa4vzGBqb4gbyuUzF+iQ9O+Bx
      ZijEDJ9ffgyzdh8jYxMIlNd3HOkgla8gnjo5gANMTM3AG4p23A9tb397DZOzEkTipTOW8Hcz
      /V0JgFQihq21RbbBuVPi9Ood1iSN89crUZNETd7S6iYSqSy/ilS9vsWowcb2bulZQ+eWswyx
      mrC+sXF6ADa2/tSc9JT47Y0VLLAMozNE5/2wAmVnKNmZM5jwdzP9NdEFKhFKfapCPoPt9SWM
      T87A5Qvz9YyaXX5ARBw3wJpAWp8ygA5wY0XGlksQjpeW0/bGJ6ZO+2h2k5Y3aSdNokmrgkQm
      59vLpOKYnx7Fw54BdoaIXYOf0uukpDJZebnwd1P9XbkFUCzLIFlcZk1YihFID9HaZTuc5QaI
      sL2tNQyNTpV3SEHLAeali/zvTDKGjfU1rKyuIcQMkmxHBnaG2OSGi8zw9sYy5Ixo6jPms2ls
      b65BdWhEvsAAZN+fHh/CE9YE+sKxjvspFvLYZdubX6ACY02u8Hdj/TXVAkhkS6dN2BEjbl4q
      4wdULOah3t3if1MTRsRp9xWYmHm/iaOH8Lo9HqSyOf5955Ee07PzvMnKZRKYHB3AwOgk/34q
      Hsba6jIUOypkcnmeYYq1ZUzOUJ8u2XE/VADagx0srazxAhb+bq6/KwNATUzJQIm4ZCIKvU7H
      DRXyORzubzEiJ06JdDss2FcdlA1lcKhWYXf/gJ8R6DKVifUJZ1gTdXrGWF/E04ER/vcx2yc9
      ozQeZ81f8Zg/w3R5UQrZ8ho/I3TaD8miV2GYbY/2J/zdXH9NtQDTjFBfOI4Ci6qNBh12dna5
      ISLQwIKUcdZEnRyw1XiIBUZwmEX9vAljfbaJ6dJyyiDl5gpm5xdO+4wORujc/Emfrkos6KEn
      1lGiQY1O+6EzygE741AGlrZfJeHvxvi7MgBOqxFLS0uwuvynn1M6uZmSonIa+AhxIlnUfqDE
      2OSJQRb0sOWy5XXEWdSezaT4m2mUOzunB8CDmlnKsBoZdEbX4YcKQLG2BCnrk54M3DxLwl93
      +7syAGbdPutDlZq4alETo9fs8SCHov5cJom15QU+0FE6YLoMts8MzrAMSfE+4NLSIlbWN+Bn
      hBdZk6be22JBzwq/rHWRrsvPyVWMUp/z2RL+utvflQEwafd5VB5LlIKSs6IdrC7LsbSuQDqb
      539TkLOyuc3/JtFcjtW1DW64sg/IyGYZRk3kjkrLg6KLdD1+2BmF9idj+2N9yosk/HW3vysD
      cLi7zi9TBWoQnGNNjE6rwaHOiAwzQJep3C4H7A4nsrnSG+jjkRCLyr1seSkqPyu6TObzuvly
      mhx1ka7LD81FmZW8P7flWRL+utvflQFwHBn4ZSwiqpaCXhczpGdRfCno2FGs8Sg+WA6KnBY9
      C1IWYXGef5N4I7oOP9TkqpTr6O0f5EHZRRL+zqub/F0JgFQyyQcSVGotn15aLYryd1iUPTMn
      hd1dClqsRk2JeN7klYKS0fH3Rwqvquvwk2d9zKWFeYxOzLAMr10gJxL+zqub/F0JgJDfjW0W
      QZuO6JVJpT7WWeWyaawvzePBkz4WBJV2SFcBZqWLp02ey2bC2uYWEumLg9x6ug4/FGStLEr5
      9y/ThxX+KtVN/q4EQDQchMPlRjxRGrg4r9JI3IzkxEApCh8Zm2R9uFIUbzcdYu4SGVBP1+GH
      mvBoJIxIJIpCofINhNUS/s6rm/xdLQbI1D9Imq99lsBUMg6vlwUh5asANLDBo/oWANBNfqol
      /DWndvtrCwAn01NPCKSofHdrHfKVdW6QBkLkkin0DY7A4Q2Wv3U1dZufagl/zand/toCAPXx
      NtaWsbqh4HMvmEU+f5vPBuQDISXDM9PTUKoN7AD4166kbvNTLeGvObXbX3taANbHC3hdUB3q
      kMuX+njUBJ3c80nXbTdXZKB7NGmksBl1m59qCX/Nqd3+2gIA3XJGd/RMzJSmw5IMaiV6+4f5
      UDZdttrb3sDmzsHpSN1V1W1+qiX8Nad2+2sPANkUFiUzGJuaQ2l6KmuCNHTHzgInkgYqzEY9
      dEZzzctajajb/FRL+GtO7fbXti6QgfW5Rscn4AtRk1MyRH2yepPbGlW3+amW8Nec2u2vbS0A
      vXB7ukwgiQy9f89m69Rtfqol/DWndvtrCwCFXBrKzVV+S9vJ3A2zdg99g6PXAkAn/VRL+GtO
      7fbXthZgZ1uBnX11ee4GNUk7mJie40FJK9Vtfqol/DWndvtrCwC15LGbIV04eQxG69Rtfqol
      /DWndvvrGABWg5rfs3lymapV6jY/1RL+mlO7/XUIAJqstIW5heubK1Kp9vmplvDXnNrtrzMA
      HB/Dbtbxh6OeROmtUrf5qZbw15za7a8jANCDjmhy0sLyxuktaq1St/mplvDXnNrtr2MxQCad
      gtfn6woASO3yUy3hrzm121/DAJBo+mk3qdv8VEv4a07t9HclAISEbosEAELPtSoAoKamwJ/H
      WJpTfVl1exMqJPQsnQLgtBhAj4teX16CWm/hz2nPZTNIZ7IcilQqjVDAA5c3wCo8CzKSMeyr
      9tlnPszPzcLe4lvhhIQ6oVMAjAd0A8EQpscG8bOf/RyLKxsYfvoI795/jInRIbz103fw5NG7
      6BmeQTZfQMBlwZO+fsQSSUimR6E8NPMNCgndJJ0C4HUcof/pE/Q97cP6+gamZmbws7fexLsP
      HuP+e+/gzbvvQCKZwbRkiQNQyKYglUnhcjkxOTKEzX0936CQ0E3SKQCpRBQOhwuRSASJRALR
      eBxBv5d1eXyIRcP8OYv0QFG328ufzULPXI/GokinEux7jpbfCSQk1AlVBMFCQs+bBAC3SOJq
      XOMSAHSVjuGwmuELhBEKhVgKIsy6pLFoBEH2dzAYLH0eZt3UZBJFVuETMbY8kUI8HOCvDPL6
      A2ydMIIBPww6Hfu79J1Upr337t5UCQC6SHRn04p8AQsLi1hbW4V8aRmrS3LMz0xhYXkNUxMj
      mJicxbZyGwrlPr9U7bQe8Sm/sbAf62srmJkax+DwKJZXVzE5OoyZeSmmp6bhbfHzem6LBABd
      JHq+DZ3l3U4HLBYLf7WnzWqFQW+Ay+2B0WjAkdkMs9EIs83JvnGMeCzKL0pkUgn+HYfdBquN
      JfY9+r6JrW+3O5Apv5hCqFJXAuC6+5q0/27v77bTX7FQ4LMkm1UrttFutdtjwwCQoUamp/LK
      Wv79rJqpILlcjqfL6jL7anV9pTxqqvDaCNCJ0ukGbmahcuyAp2o15PECPct7WwGIBD1YXV3n
      z3YPBIIsBRCJhOFxO1jApoTZYudNvs/ng8Vsgi8YKX/zYjUCAL2lXKFQsG6Eju3PwQPLANtn
      NBpFKBhANF56E71iaweRWAyRcBh+5pOCSD9LgWAIAb+f+wyGIjzwvIyaAeC4mMe+cotPO4my
      ADjAfND+yZefglzmm35SntZ7h9pFSqUuez/vMX/jyqJ8BXanm3WprDiy2JgHfzkoDyPNjld7
      sAuL03Oat+SP8vBkPZ+P5Sc7hnSN94g9S5f3+GyF/S6srKzCdGRj+cj8Mm/cdyTaXgA8diPm
      pXLsKlbx5MlTzLPgbm5yBE/7+zEwOIhHD+6jf2AQo+OTGBwcgI5V0MuoEQDcVj0ePnyI4eEh
      DPQPYGhoFOPj4xgeGUb/017I1nb4IzQePnqCRZmU+RjEk54eDA8NYZYFn/cfPMLI2BiePH6A
      obFZpC454NcMAPGwF71PHvEAdpT57mG/9zNf89IF7qO/nz57gse9fXD5L3fSqKVGANjfWmZ5
      N4R7995DL8vHEZZ/U5MTePLwAX5+/zE7uVgw3NeDyVkJJsZHMfC0B0+f9rNjmOczDKjM+9hn
      9x8+ht7iKm+3vloBgOtIi8npOczNTmNibISV5wSGWH2jJ0W3FYBUIgKDwcgCOQv7aYDJZGaB
      2RE7e1h4wGZiwdyRxQqH08UDtmAkVv7mxWoEgEjID5fLBb1eC52OgkgTH9WmQNFhs8LjZ2d4
      n4ev42TBp93hgJmtY6NA0mLG/u4OxhkA6wolLCzw7EQLQKPy5IdG2K1WG2wszywsqHU6ndCo
      VZAwMGclchhYfjZyNq1WI5Ur4HWy/NOflhmVqcl8xPNIbzDxsz73zPKQ8o6CcbPZwj1rDzVY
      WZTwpzQcsjKIJS/frWkFAKl4FJFogk/mpIsCVL5HR0cIx674mtRkMnlaCa8jUaZQqrWs1Smb
      zSLGukbpdKbm8mclmk5CENRa1mxKJuJIJJs/fjquWp+3I9GL7ui9vLWWXZTa7VEA0KbUTgBa
      lToJwFVTVwJw2S5Qu3RivpvVTBeoU2pF96LdarfHZwJAj5z20Nu27awfarPDwvpMwUj82gCg
      nje9IJCqVFYA0BIJAOoA4LCaoNjc5FdHpFIZVDozN9Sqa7OXFcWdT1wBfO3Qiv+ttWLJHxYA
      tEACgAsAoDftqfd2YTSZcaDax+7OLn/DXi6f73gLQGd+qvy/It3Bry7s4J7VIwBogQQAdQbC
      +CjumUSiQhUA1JcAoDW6VgBqSQBwOQkAWiMBAJMAoD26CQA4AxEMKR3oVdgwq/YgW34Naqsk
      AGiTBACt0abBjY/dmcUHX5rAZ/5pCeFka8tdANAmCQBaIwLghVdn8IEXx/HpHwkABAAtlABA
      ANA2CQBaIwEAkwCgPRIACADaJgFAayQAYBIAtEcCAAFA2yQAaI2uFYBstjSfnQqTEj2HphUA
      FIsFBB12eM1G+Cxm5Nl+LpIAoD0SAFwAAN2YbTZosb6+DrlsAbJFOfQWR0smw2UScfTeeQlv
      /slX8M5f/k/4GQQXSQDQHt1IAPweYK8XUD4AtBNAobm6eCEA+sMDKJXbWJTOQyKV4dBo5ZnW
      7HTodDyG+y/+Fb7/pU9zCKgluEgtAYAm81GFpFSe2NeI6C64vb09lh9KaLVaFAoXP41BANAa
      nQPAqADe+CDw6i8Bb/8BO4hQec3L6+wEzwsAYN0Uvx8ResRFKIxwuPR8SSrUZluA6wAgubUF
      199+B65vfxuRgYGGIaAbvt944w28+uqrePvtt+tWHgFAa1QTgNc/ALzyi8Dd328YgFwmjdW+
      x5h+6weQ/Pzu9QTB1wFAuH8Amg//JjQf+g0OQTqWgc8Wg88aQyxYv0UjAF5//XW88soruHv3
      7rnKk2Ump/wRPHYF0e8JwRVPNAxAkW2zEInwdJxt/8Nsn0cAquvecwuAbs2Fd76xhHe+Loe8
      R8ebw4tUD4BwroD/oNByfx9e2semP9QYAGxd/5tvwvy5z8P8hT9CbF5SXtA+CQCqAKAHrNLz
      Xlz8LTC1C++2AKBZcuDHfybFm38qgeSepiUAfIoBQB4/dEUAuC/mj3yS33arHQBQF4PKl1Kh
      0TithjoKQDIWxuqyHEoVC/IaASAZZDVkt5T8OrbSxQGiAKCGbgEAlIfUv6ayffDSV2FUrJWX
      XF0dBSCbikMuncee9tmXJWsCQJelKDInY+9+mu0lXF5QWwKAGmoBAHRlinxRogd61VM7AKDg
      ksr1H778Gaiks+UlV1dHAUgnIpBJpdCZn/2MzpoA0DVZuixVNlVI+hHNRhHJRBDPxXFc9Xxo
      AUANtQAAujxLV6jI38LCQt1jui0AFI+Lp6me6rQAMSxK56A80FdV2fd1GQDM7m388fQf44tj
      X8S35N9CmIEVsMf5FZeQO4lkNNp1AFDflUalyQuNUtNo9Vm1GgA6KWx7tjFoGMSQYQiWsLlp
      AGiMgi7Tksfh4eFLAUDPOqVUa1XySCcwOpHRCa1wfHHX9joAcPnUeG3jNXx3+bv8pzNk4RcQ
      KP8io6MohCt7IxcCQDHA2oocaoO1/Ml5XQYAjX0Fv/fk9/CR9z7CITCaHHjwnVV+xWXoH5WI
      eEOVAJiMKKYLKCbzKKbypRp/Rp0AwHdk4qPS5IdGqWm0mp8FyqnVANDZ6uXll/HCvRfwsfsf
      w5BusGEAKL9yzjhyjjgr6EwNAIqnqXQglTI4g3h55ADf7NvDD+b1SGYrK3g8G+cnMCpDOqGZ
      IxeP2F8HAGfrGv1UmdZg/vwXeB7qPvk7SKvV5S2VdCEAepWCFe5bkKwoy5+c11UAMBjsvPJT
      Zev93ibCnkoA3BodAk+08PxICd9P95D3JssbLqkWANlsjp+5+NmrvN5ZWaIWfmalMyydacP9
      /RcC4DEZuBfyRN7idj/CI0aE+nSIzlvhtDhaDgCdtSiPCIJB3cA5AGh8glpNGq9IJ84Dn9zx
      wXlnlSfyqtyuBCAU3oTm8CVoNC/CbP4hixEq8/Vc5aqaZ0Nnfiq/k8qlCWjKS2qrawD43Od5
      Puo+8duNAeC06DE+Nopt1gV6ltoCwEGp8ttflPPCpDPaWVUD8J7FjUerZn7m+lb/HjaPguU1
      3xdVfjqzUuWiM22ov68hAKI6F/dCnsibw2jrKAChvn4+PkH5RuMVug1P+ZvvK6HwwP6SnHsk
      UKsBcDh7IZH+OuYlv4aNzc+yVrOyO9AJAKhlovI8aaUaVUcBONLto7e3F1uqSgDowCiRqFDp
      bSAVfccOA/AuA+Brj7d4ptDTAuiRGdWiMz9VLPJAFa3TACy7A5hWubi3oR0HQlF2TDR5i/JK
      +RBFv74uAOSL/JFPzcr5l0pcBQBCkvKTiu1c5YqnWQ1hkNCVFfYzkgo2B4BklrdMlI+U6Pea
      zfUF6igAHscRpibGsasx8oNx2ejFFnrs7auwt6OEze3n4wNLhy5+5qUz8FOFHcfb9wUAVQDM
      Wr34zz+QcX8f/z+zUBmOSpO3KJ/u/DKKLM86DYA57sW39Xael983uyHTOisrl/WgdBmblSH9
      jDg2mwaAfJG/E4+FfGOXajvcBTJAJpNhT61FNp+HRX8I5R47my1KIZEs8Ifj0gua31vU8YIl
      UwQBFaYA4DwA/+n/ybjHj96ZKQFAFYvyiOVVcftexwHYDrm4N/L4qU0tZjWOZ1cu9jNytFgX
      AOoBnPQQLgOA9rDyUm0iaYbL1Qen6yl8/jnWw6iEolkAEnsqmHf9PP+oGxn2BJ8NQDadgtvt
      QjAc5S1VktFCLzkrvS7Iwl8pQ12g+0sGAYAAgFd48kU+pfcP4dSH6gJw3uNTSBf+Dfe5sflf
      6scpDQIQ3tzF09c2eR7+8zfksKmdzwYg5HVgknWB6o0DCAAEACQC4KxHNcvTxgGo9BjNBKGO
      p7AfS0GfTGNN72oaAKpz5JHq4IUA0EDY3PQEtg8MAgABwHkA/GoU4/HTKdvFTKblAOyG3fjE
      mpr7/JzSgLmLPLYcgGQMK3IZdjTXDUAM+Ty9G4pehBFBvpAVADAAaHYlBXGUaOS60wAcWDbh
      +MZf8wpGU7ajc/MtB6Ahj60GIBYOwqDXwmw7f7Y5UScASFndODj4Gs+QTcUfwuubEwAwAGh2
      Jc2yJH806zK+6eooAGcrVy2PNxyAY9jMeuj1eqj1Jta/K31arU4AkLQ4eGZQplDmUKAkAHDx
      gSWqWOSRKpoAoMUtQDoZ51d7IvHKIfOz6k4ArIB1tTzIxBL7fdAwIAAQADQGgM9pgVQqxd4h
      DYSVP6xSVwKwaQFG/qLkgRL7fVDfLwAQADQGQC6d4I9A2dearzUIvhIAw39e2j8l9ntnADiZ
      aVkUANwGADKJKKbGR6DY1woA6gAQChmg073KZ1rST3fcKgC46QAEPTaMDg9hS0VPSSh/WCUB
      QAkAr1eBRflvcY/00xbaFQDcdADolsi5qXGsKdWiBRAAPI8xQBKrculpCxAJBlhBe2A2mWA2
      mxGMxAUAAoDbC0A6HsLs9BQ0BisD4BgmjQor62uQzk5hemaezwal4O+eXC8AEADcPgAifjcm
      x8ewXb4hJhLwwXxkxu7ODnZ3d+HwBvnToUULIAC4lQB47CYMsIqyvkOPCSl/yHQy15skukAC
      gFsLQCoWgmR2uhQDlD+rlgBAAHBLATiGy27GvloNrdFS0QKclQBAAHBrAbCZDiGTL0GtPxIA
      CACevy4Q9fOpgtPTHp4lAYAA4NYCcBkJAAQAAgABgABAACAAEAAIAAQAAgABgABAACAAEAAI
      AG4jALlsBqFQCKFgEMl06T3BAgABwHMDgN9lxcryEuSLi1AbLMhks2I2qADg+QEgFvZDsb6K
      5eUVGG0uAYAA4PkCgN6VlclkkWVdoUKhKLpAAoDnC4BqCQAEAAIAAYAAQAAgABAACAAEAAIA
      AYAAQAAgABAACAAEAOdNCQAEAAIAAYAAQAAgABAA3FAAjosF2K0W8WhEAcDzCUAuHcf6yjIO
      9Ef8TfECAAHA7QDgK/j/4vvPUjwSr8gAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 14' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 15' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='FirmB by region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 17' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
